(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    zip = { CP: [['is', 'isn\'t'],
            ['am', 'ain\'t'],
            ['are', 'aren\'t'],
            ['was', 'wasn\'t'],
            ['were', 'weren\'t'],
            ['will be', 'won\'t be']],
        MD: [['did', 'didn\'t'],
            ['would', 'wouldn\'t'],
            ['could', 'couldn\'t'],
            ['should', 'shouldn\'t'],
            ['can', 'can\'t'],
            ['will', 'won\'t'],
            ['must', 'mustn\'t'],
            ['shall', 'shant'],
            ['shall', 'shan\'t'],
            ['ought to', 'ought not to'],
            ['ought', 'ought not'],
            ['might', 'might not'],
            ['may', 'may not'],
            ['lets', 'lets not'],
            ['let\'s', 'let\'s not'],
            ['who\'d', 'who\'d not']] };
    return (function () {
        var res = { negate: {}, CP: {}, MD: {} };
        ['CP', 'MD'].forEach(function (type) {
            res[type] = {};
            zip[type].forEach(function (a) {
                res[type][a[0]] = type;
                res[type][a[1]] = type;
                res.negate[a[1]] = a[0];
                res.negate[a[0]] = a[1];
            });
        });
        return res;
    })();
});
//# sourceMappingURL=special.min.js.map