{"version":3,"file":"WidgetBase.js","sourceRoot":"","sources":["WidgetBase.ts"],"names":[],"mappings":"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","sourcesContent":["import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tDiffPropertyReaction,\n\tDNode,\n\tRender,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties,\n\tMetaBase,\n\tRenderResult\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { WIDGET_BASE_TYPE } from './Registry';\nimport { Handle } from '../core/Destroyable';\nimport { Base } from './meta/Base';\nimport { widgetInstanceMap, v } from './vdom';\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any; scope: any };\n\nconst decoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst builtDecoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst boundAuto = auto.bind(null);\n\nfunction isDomMeta(meta: any): meta is Base {\n\treturn Boolean(meta.afterRender);\n}\n\nconst IGNORE_LIST: (string | symbol)[] = ['render', ...Object.getOwnPropertyNames(Object.getPrototypeOf({}))];\n\nconst autoBindCache = new Map<any, string[]>();\n\nfunction autoBind(instance: any) {\n\tlet prototype = instance.constructor.prototype;\n\n\tlet keys: string[] = [];\n\n\tif (autoBindCache.has(prototype)) {\n\t\tkeys = autoBindCache.get(prototype) as string[];\n\t} else {\n\t\twhile (prototype) {\n\t\t\tconst ownKeys = Object.getOwnPropertyNames(prototype);\n\t\t\tif (prototype.constructor.hasOwnProperty('_type')) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst descriptors = Object.getOwnPropertyDescriptors(prototype);\n\t\t\tconst descriptorKeys = Object.keys(descriptors);\n\t\t\tconst getterKeys = descriptorKeys.filter((key) => descriptors[key].get || descriptors[key].set);\n\t\t\tconst filteredKeys = ownKeys.filter((key) => getterKeys.indexOf(key) === -1);\n\n\t\t\tkeys = [...keys, ...filteredKeys];\n\t\t\tprototype = Object.getPrototypeOf(prototype);\n\t\t}\n\n\t\tkeys = keys.filter((k) => typeof instance[k] === 'function' && IGNORE_LIST.indexOf(k) === -1);\n\n\t\tautoBindCache.set(prototype, keys);\n\t}\n\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key = keys[i];\n\n\t\tconst boundFunc = instance[key].bind(instance);\n\t\tObject.defineProperty(instance, key, {\n\t\t\tconfigurable: true,\n\t\t\tget() {\n\t\t\t\treturn boundFunc;\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\t/**\n\t * static identifier\n\t */\n\tstatic _type = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler = new RegistryHandler();\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, MetaBase> | undefined;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\tprivate _handles: Handle[] = [];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = {} as P;\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\t\tthis.own(this._registry);\n\t\tthis.own(this._registry.on('invalidate', this._boundInvalidate));\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t\tthis.destroy();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\trendering: false,\n\t\t\tinputProperties: {},\n\t\t\tregistry: this.registry\n\t\t});\n\n\t\tthis.own({\n\t\t\tdestroy: () => {\n\t\t\t\twidgetInstanceMap.delete(this);\n\t\t\t\tthis._nodeHandler.clear();\n\t\t\t\tthis._nodeHandler.destroy();\n\t\t\t}\n\t\t});\n\n\t\tthis._runAfterConstructors();\n\t}\n\n\tprotected meta<T extends MetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, MetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis.own(cached);\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [...this._changedPropertyKeys];\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties']): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.inputProperties = originalProperties;\n\t\t}\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\n\t\tif (this._initialProperties) {\n\t\t\tautoBind(this);\n\t\t}\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [...propertyNames, ...Object.keys(this._properties)];\n\t\t\tconst checkedProperties: (string | number)[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = properties[propertyName];\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\t\t\t\tconst executedReactions: Function[] = [];\n\t\t\t\treactionFunctions.forEach(({ reaction, propertyName }) => {\n\t\t\t\t\tconst propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n\t\t\t\t\tconst reactionRun = executedReactions.indexOf(reaction) !== -1;\n\t\t\t\t\tif (propertyChanged && !reactionRun) {\n\t\t\t\t\t\treaction.call(this, this._properties, diffPropertyResults);\n\t\t\t\t\t\texecutedReactions.push(reaction);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t} else {\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = properties[propertyName];\n\t\t\t\t} else {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\t\tthis._initialProperties = false;\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic __render__(): RenderResult {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.dirty = false;\n\t\t}\n\t\tconst render = this._runBeforeRenders();\n\t\tconst dNode = this._runAfterRenders(render());\n\t\treturn dNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData && instanceData.invalidate) {\n\t\t\tinstanceData.invalidate();\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [value];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t} else {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\tconst buildDecorators = builtDecoratorMap.get(this.constructor) || new Map();\n\t\tbuildDecorators.set(decoratorKey, allDecorators);\n\t\tbuiltDecoratorMap.set(this.constructor, buildDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet decoratorCache = builtDecoratorMap.get(this.constructor);\n\t\tlet allDecorators =\n\t\t\tthis._decoratorCache.get(decoratorKey) || (decoratorCache && decoratorCache.get(decoratorKey));\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tallDecorators = [...allDecorators];\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce(\n\t\t\t\t(properties, beforePropertiesFunction) => {\n\t\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t\t},\n\t\t\t\t{ ...properties }\n\t\t\t);\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprivate _runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\tdNode = afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tisDomMeta(meta) && meta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n\n\tprivate _runAfterConstructors(): void {\n\t\tconst afterConstructors = this.getDecorator('afterConstructor');\n\n\t\tif (afterConstructors.length > 0) {\n\t\t\tafterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n\t\t}\n\t}\n\n\tprotected own(handle: Handle): void {\n\t\tthis._handles.push(handle);\n\t}\n\n\tprotected destroy() {\n\t\twhile (this._handles.length > 0) {\n\t\t\tconst handle = this._handles.pop();\n\t\t\tif (handle) {\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n"]}