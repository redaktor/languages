{"version":3,"file":"customElement.mjs","sourceRoot":"","sources":["customElement.ts"],"names":[],"mappings":";;;;;;;;;AAmCA;;;GAGG;AACH,MAAM,UAAU,aAAa,CAA8C,MAA8B;IACxG,4BAA4B;IAC5B,MAAM,EAAE,GAAG,EAAE,OAAO,KAAoB,MAAM,EAAxB,oCAAwB,CAAC;IAC/C,MAAM,iBAAiB,GAAkD,UAAU,CAAC;IAEpF,IAAI,OAAO,EAAE;QACZ,iBAAiB,CAAC,OAAO,GAAG,OAAO,CAAC;KACpC;IAED,OAAO,UAAS,MAAW;QAC1B,MAAM,CAAC,yBAAyB,qBAC5B,MAAM,CAAC,yBAAyB,EAChC,iBAAiB,CACpB,CAAC;IACH,CAAC,CAAC;AACH,CAAC;AAED,eAAe,aAAa,CAAC","sourcesContent":["import { WidgetProperties } from '../interfaces';\nimport { CustomElementChildType } from '../registerCustomElement';\nimport Registry from '../Registry';\n\nexport type CustomElementPropertyNames<P extends object> = ((keyof P) | (keyof WidgetProperties))[];\n\n/**\n * Defines the custom element configuration used by the customElement decorator\n */\nexport interface CustomElementConfig<P extends object = { [index: string]: any }> {\n\t/**\n\t * The tag of the custom element\n\t */\n\ttag?: string;\n\n\t/**\n\t * List of widget properties to expose as properties on the custom element\n\t */\n\tproperties?: CustomElementPropertyNames<P>;\n\n\t/**\n\t * List of attributes on the custom element to map to widget properties\n\t */\n\tattributes?: CustomElementPropertyNames<P>;\n\n\t/**\n\t * List of events to expose\n\t */\n\tevents?: CustomElementPropertyNames<P>;\n\n\tchildType?: CustomElementChildType;\n\n\tregistryFactory?: () => Registry;\n}\n\n/**\n * This Decorator is provided properties that define the behavior of a custom element, and\n * registers that custom element.\n */\nexport function customElement<P extends object = { [index: string]: any }>(config: CustomElementConfig<P>) {\n\t// rename \"tag\" to \"tagName\"\n\tconst { tag: tagName, ...configRest } = config;\n\tconst userDefinedConfig: CustomElementConfig<P> & { tagName?: string } = configRest;\n\n\tif (tagName) {\n\t\tuserDefinedConfig.tagName = tagName;\n\t}\n\n\treturn function(target: any) {\n\t\ttarget.__customElementDescriptor = {\n\t\t\t...target.__customElementDescriptor,\n\t\t\t...userDefinedConfig\n\t\t};\n\t};\n}\n\nexport default customElement;\n"]}