{"version":3,"file":"handleDecorator.js","sourceRoot":"","sources":["handleDecorator.ts"],"names":[],"mappings":";;;;;;;;;;;IAEA;;;;;OAKG;IACH,SAAgB,eAAe,CAAC,OAAyB;QACxD,OAAO,UAAS,MAAW,EAAE,WAAoB,EAAE,UAA+B;YACjF,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;gBACjC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;aACrC;iBAAM;gBACN,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;aAC7B;QACF,CAAC,CAAC;IACH,CAAC;IARD,0CAQC;IAED,kBAAe,eAAe,CAAC","sourcesContent":["export type DecoratorHandler = (target: any, propertyKey?: string) => void;\n\n/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler: DecoratorHandler) {\n\treturn function(target: any, propertyKey?: string, descriptor?: PropertyDescriptor) {\n\t\tif (typeof target === 'function') {\n\t\t\thandler(target.prototype, undefined);\n\t\t} else {\n\t\t\thandler(target, propertyKey);\n\t\t}\n\t};\n}\n\nexport default handleDecorator;\n"]}