{"version":3,"file":"diff.mjs","sourceRoot":"","sources":["diff.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAC;AAE9C,SAAS,eAAe,CAAC,KAAU;IAClC,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,iBAAiB,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC5F,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,gBAAqB,EAAE,WAAgB;IAC7D,OAAO;QACN,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,WAAW;KAClB,CAAC;AACH,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,gBAAqB,EAAE,WAAgB;IAC7D,OAAO;QACN,OAAO,EAAE,KAAK;QACd,KAAK,EAAE,WAAW;KAClB,CAAC;AACH,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,gBAAqB,EAAE,WAAgB;IAChE,OAAO;QACN,OAAO,EAAE,gBAAgB,KAAK,WAAW;QACzC,KAAK,EAAE,WAAW;KAClB,CAAC;AACH,CAAC;AAED,MAAM,UAAU,OAAO,CAAC,gBAAqB,EAAE,WAAgB,EAAE,KAAK,GAAG,CAAC;IACzE,IAAI,OAAO,GAAG,KAAK,CAAC;IAEpB,MAAM,gBAAgB,GAAG,gBAAgB,IAAI,eAAe,CAAC,gBAAgB,CAAC,CAAC;IAC/E,MAAM,gBAAgB,GAAG,WAAW,IAAI,eAAe,CAAC,WAAW,CAAC,CAAC;IAErE,IAAI,CAAC,gBAAgB,IAAI,CAAC,gBAAgB,EAAE;QAC3C,OAAO;YACN,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,WAAW;SAClB,CAAC;KACF;IAED,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACnD,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAEzC,IAAI,YAAY,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM,EAAE;QAC3C,OAAO,GAAG,IAAI,CAAC;KACf;SAAM;QACN,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE;YAC9B,IAAI,KAAK,GAAG,CAAC,EAAE;gBACd,OAAO,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,gBAAgB,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;aAC3E;YACD,OAAO,WAAW,CAAC,GAAG,CAAC,KAAK,gBAAgB,CAAC,GAAG,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;KACH;IACD,OAAO;QACN,OAAO;QACP,KAAK,EAAE,WAAW;KAClB,CAAC;AACH,CAAC;AAED,MAAM,UAAU,IAAI,CAAC,gBAAqB,EAAE,WAAgB;IAC3D,IAAI,MAAM,CAAC;IACX,IAAI,OAAO,WAAW,KAAK,UAAU,EAAE;QACtC,IAAI,WAAW,CAAC,KAAK,KAAK,gBAAgB,EAAE;YAC3C,MAAM,GAAG,SAAS,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;SAClD;aAAM;YACN,MAAM,GAAG,MAAM,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;SAC/C;KACD;SAAM,IAAI,eAAe,CAAC,WAAW,CAAC,EAAE;QACxC,MAAM,GAAG,OAAO,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;KAChD;SAAM;QACN,MAAM,GAAG,SAAS,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;KAClD;IACD,OAAO,MAAM,CAAC;AACf,CAAC","sourcesContent":["import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any, depth = 0): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\tif (depth > 0) {\n\t\t\t\treturn shallow(newProperty[key], previousProperty[key], depth - 1).changed;\n\t\t\t}\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n"]}