{"version":3,"file":"InputValidity.js","sourceRoot":"","sources":["InputValidity.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,+BAA0B;IAE1B;QAAmC,yCAAI;QAAvC;;QAoBA,CAAC;QAnBA,2BAAG,GAAH,UAAI,GAAoB,EAAE,KAAa;YAAvC,iBAkBC;YAjBA,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAgC,CAAC;YAE9D,IAAI,CAAC,IAAI,EAAE;gBACV,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;aACzC;YAED,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;gBACzB,mDAAmD;gBACnD,8CAA8C;gBAC9C,oCAAoC;gBACpC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,UAAU,EAAE,EAAjB,CAAiB,CAAC,CAAC;aACpC;YAED,OAAO;gBACN,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;gBAC1B,OAAO,EAAE,IAAI,CAAC,iBAAiB;aAC/B,CAAC;QACH,CAAC;QACF,oBAAC;IAAD,CAAC,AApBD,CAAmC,cAAI,GAoBtC;IApBY,sCAAa;IAsB1B,kBAAe,aAAa,CAAC","sourcesContent":["import Base from './Base';\n\nexport class InputValidity extends Base {\n\tget(key: string | number, value: string) {\n\t\tconst node = this.getNode(key) as HTMLFormElement | undefined;\n\n\t\tif (!node) {\n\t\t\treturn { valid: undefined, message: '' };\n\t\t}\n\n\t\tif (value !== node.value) {\n\t\t\t// if the vdom is out of sync with the real dom our\n\t\t\t// validation check will be one render behind.\n\t\t\t// Call invalidate on the next loop.\n\t\t\tsetTimeout(() => this.invalidate());\n\t\t}\n\n\t\treturn {\n\t\t\tvalid: node.validity.valid,\n\t\t\tmessage: node.validationMessage\n\t\t};\n\t}\n}\n\nexport default InputValidity;\n"]}