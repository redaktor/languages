{"version":3,"file":"InputValidity.mjs","sourceRoot":"","sources":["InputValidity.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,QAAQ,CAAC;AAE1B,MAAM,OAAO,aAAc,SAAQ,IAAI;IACtC,GAAG,CAAC,GAAoB,EAAE,KAAa;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAgC,CAAC;QAE9D,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,EAAE,CAAC;SACzC;QAED,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YACzB,mDAAmD;YACnD,8CAA8C;YAC9C,oCAAoC;YACpC,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;SACpC;QAED,OAAO;YACN,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;YAC1B,OAAO,EAAE,IAAI,CAAC,iBAAiB;SAC/B,CAAC;IACH,CAAC;CACD;AAED,eAAe,aAAa,CAAC","sourcesContent":["import Base from './Base';\n\nexport class InputValidity extends Base {\n\tget(key: string | number, value: string) {\n\t\tconst node = this.getNode(key) as HTMLFormElement | undefined;\n\n\t\tif (!node) {\n\t\t\treturn { valid: undefined, message: '' };\n\t\t}\n\n\t\tif (value !== node.value) {\n\t\t\t// if the vdom is out of sync with the real dom our\n\t\t\t// validation check will be one render behind.\n\t\t\t// Call invalidate on the next loop.\n\t\t\tsetTimeout(() => this.invalidate());\n\t\t}\n\n\t\treturn {\n\t\t\tvalid: node.validity.valid,\n\t\t\tmessage: node.validationMessage\n\t\t};\n\t}\n}\n\nexport default InputValidity;\n"]}