{"version":3,"file":"Resize.js","sourceRoot":"","sources":["Resize.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,+BAA8B;IAC9B,sCAAiC;IACjC,4DAAuD;IAuBvD;QAA4B,kCAAI;QAAhC;YAAA,qEAkDC;YAjDQ,cAAQ,GAAG,IAAI,aAAG,EAAuC,CAAC;;QAiDnE,CAAC;QA/CO,oBAAG,GAAV,UACC,GAAoB,EACpB,UAAqC;YAFtC,iBA8CC;YA5CA,2BAAA,EAAA,aAAa,EAAwB;YAErC,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAE/B,IAAI,CAAC,IAAI,EAAE;gBACV,IAAM,eAAe,GAAuB,EAAE,CAAC;gBAC/C,KAAK,IAAI,WAAW,IAAI,UAAU,EAAE;oBACnC,eAAe,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;iBACrC;gBACD,OAAO,eAAwC,CAAC;aAChD;YAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAC3B,IAAM,gBAAc,GAAG,IAAI,wBAAc,CAAC,UAAC,EAAO;wBAAP,0BAAO,EAAN,aAAK;oBAChD,IAAI,gBAAgB,GAAG,KAAK,CAAC;oBAC7B,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE;wBAC3B,IAAA,+BAAW,CAAW;wBAC9B,IAAM,eAAe,GAAG,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBAC/C,IAAI,kBAAkB,GAAuB,EAAE,CAAC;wBAEhD,KAAK,IAAI,WAAW,IAAI,UAAU,EAAE;4BACnC,IAAM,QAAQ,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC;4BACtD,kBAAkB,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;4BAC3C,IAAI,CAAC,gBAAgB,IAAI,QAAQ,KAAK,eAAgB,CAAC,WAAW,CAAC,EAAE;gCACpE,gBAAgB,GAAG,IAAI,CAAC;6BACxB;yBACD;wBAED,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;qBAC3C;yBAAM;wBACN,gBAAgB,GAAG,IAAI,CAAC;qBACxB;oBACD,gBAAgB,IAAI,KAAI,CAAC,UAAU,EAAE,CAAC;gBACvC,CAAC,CAAC,CAAC;gBACH,gBAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC7B,IAAI,CAAC,GAAG,CAAC;oBACR,OAAO,EAAE;wBACR,gBAAc,CAAC,UAAU,EAAE,CAAC;oBAC7B,CAAC;iBACD,CAAC,CAAC;aACH;YAED,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAA0B,CAAC;QACxD,CAAC;QACF,aAAC;IAAD,CAAC,AAlDD,CAA4B,WAAI,GAkD/B;IAlDY,wBAAM;IAoDnB,kBAAe,MAAM,CAAC","sourcesContent":["import { Base } from './Base';\nimport Map from '../../shim/Map';\nimport ResizeObserver from '../../shim/ResizeObserver';\n\nexport interface ContentRect {\n\treadonly bottom: number;\n\treadonly height: number;\n\treadonly left: number;\n\treadonly right: number;\n\treadonly top: number;\n\treadonly width: number;\n\treadonly x: number;\n\treadonly y: number;\n}\n\nexport interface PredicateFunction {\n\t(contentRect: ContentRect): boolean;\n}\n\nexport interface PredicateFunctions {\n\t[id: string]: PredicateFunction;\n}\n\nexport type PredicateResponses<T = PredicateFunctions> = { [id in keyof T]: boolean };\n\nexport class Resize extends Base {\n\tprivate _details = new Map<string | number, PredicateResponses>();\n\n\tpublic get<T extends PredicateFunctions>(\n\t\tkey: string | number,\n\t\tpredicates = {} as PredicateFunctions\n\t): PredicateResponses<T> {\n\t\tconst node = this.getNode(key);\n\n\t\tif (!node) {\n\t\t\tconst defaultResponse: PredicateResponses = {};\n\t\t\tfor (let predicateId in predicates) {\n\t\t\t\tdefaultResponse[predicateId] = false;\n\t\t\t}\n\t\t\treturn defaultResponse as PredicateResponses<T>;\n\t\t}\n\n\t\tif (!this._details.has(key)) {\n\t\t\tthis._details.set(key, {});\n\t\t\tconst resizeObserver = new ResizeObserver(([entry]) => {\n\t\t\t\tlet predicateChanged = false;\n\t\t\t\tif (Object.keys(predicates).length) {\n\t\t\t\t\tconst { contentRect } = entry;\n\t\t\t\t\tconst previousDetails = this._details.get(key);\n\t\t\t\t\tlet predicateResponses: PredicateResponses = {};\n\n\t\t\t\t\tfor (let predicateId in predicates) {\n\t\t\t\t\t\tconst response = predicates[predicateId](contentRect);\n\t\t\t\t\t\tpredicateResponses[predicateId] = response;\n\t\t\t\t\t\tif (!predicateChanged && response !== previousDetails![predicateId]) {\n\t\t\t\t\t\t\tpredicateChanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._details.set(key, predicateResponses);\n\t\t\t\t} else {\n\t\t\t\t\tpredicateChanged = true;\n\t\t\t\t}\n\t\t\t\tpredicateChanged && this.invalidate();\n\t\t\t});\n\t\t\tresizeObserver.observe(node);\n\t\t\tthis.own({\n\t\t\t\tdestroy: () => {\n\t\t\t\t\tresizeObserver.disconnect();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this._details.get(key) as PredicateResponses<T>;\n\t}\n}\n\nexport default Resize;\n"]}