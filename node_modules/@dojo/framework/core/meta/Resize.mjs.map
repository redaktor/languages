{"version":3,"file":"Resize.mjs","sourceRoot":"","sources":["Resize.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAC9B,OAAO,GAAG,MAAM,gBAAgB,CAAC;AACjC,OAAO,cAAc,MAAM,2BAA2B,CAAC;AAuBvD,MAAM,OAAO,MAAO,SAAQ,IAAI;IAAhC;;QACS,aAAQ,GAAG,IAAI,GAAG,EAAuC,CAAC;IAiDnE,CAAC;IA/CO,GAAG,CACT,GAAoB,EACpB,aAAa,EAAwB;QAErC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAE/B,IAAI,CAAC,IAAI,EAAE;YACV,MAAM,eAAe,GAAuB,EAAE,CAAC;YAC/C,KAAK,IAAI,WAAW,IAAI,UAAU,EAAE;gBACnC,eAAe,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;aACrC;YACD,OAAO,eAAwC,CAAC;SAChD;QAED,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAC3B,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE;gBACrD,IAAI,gBAAgB,GAAG,KAAK,CAAC;gBAC7B,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE;oBACnC,MAAM,EAAE,WAAW,EAAE,GAAG,KAAK,CAAC;oBAC9B,MAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBAC/C,IAAI,kBAAkB,GAAuB,EAAE,CAAC;oBAEhD,KAAK,IAAI,WAAW,IAAI,UAAU,EAAE;wBACnC,MAAM,QAAQ,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC;wBACtD,kBAAkB,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAC;wBAC3C,IAAI,CAAC,gBAAgB,IAAI,QAAQ,KAAK,eAAgB,CAAC,WAAW,CAAC,EAAE;4BACpE,gBAAgB,GAAG,IAAI,CAAC;yBACxB;qBACD;oBAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;iBAC3C;qBAAM;oBACN,gBAAgB,GAAG,IAAI,CAAC;iBACxB;gBACD,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACvC,CAAC,CAAC,CAAC;YACH,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,CAAC,GAAG,CAAC;gBACR,OAAO,EAAE,GAAG,EAAE;oBACb,cAAc,CAAC,UAAU,EAAE,CAAC;gBAC7B,CAAC;aACD,CAAC,CAAC;SACH;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAA0B,CAAC;IACxD,CAAC;CACD;AAED,eAAe,MAAM,CAAC","sourcesContent":["import { Base } from './Base';\nimport Map from '../../shim/Map';\nimport ResizeObserver from '../../shim/ResizeObserver';\n\nexport interface ContentRect {\n\treadonly bottom: number;\n\treadonly height: number;\n\treadonly left: number;\n\treadonly right: number;\n\treadonly top: number;\n\treadonly width: number;\n\treadonly x: number;\n\treadonly y: number;\n}\n\nexport interface PredicateFunction {\n\t(contentRect: ContentRect): boolean;\n}\n\nexport interface PredicateFunctions {\n\t[id: string]: PredicateFunction;\n}\n\nexport type PredicateResponses<T = PredicateFunctions> = { [id in keyof T]: boolean };\n\nexport class Resize extends Base {\n\tprivate _details = new Map<string | number, PredicateResponses>();\n\n\tpublic get<T extends PredicateFunctions>(\n\t\tkey: string | number,\n\t\tpredicates = {} as PredicateFunctions\n\t): PredicateResponses<T> {\n\t\tconst node = this.getNode(key);\n\n\t\tif (!node) {\n\t\t\tconst defaultResponse: PredicateResponses = {};\n\t\t\tfor (let predicateId in predicates) {\n\t\t\t\tdefaultResponse[predicateId] = false;\n\t\t\t}\n\t\t\treturn defaultResponse as PredicateResponses<T>;\n\t\t}\n\n\t\tif (!this._details.has(key)) {\n\t\t\tthis._details.set(key, {});\n\t\t\tconst resizeObserver = new ResizeObserver(([entry]) => {\n\t\t\t\tlet predicateChanged = false;\n\t\t\t\tif (Object.keys(predicates).length) {\n\t\t\t\t\tconst { contentRect } = entry;\n\t\t\t\t\tconst previousDetails = this._details.get(key);\n\t\t\t\t\tlet predicateResponses: PredicateResponses = {};\n\n\t\t\t\t\tfor (let predicateId in predicates) {\n\t\t\t\t\t\tconst response = predicates[predicateId](contentRect);\n\t\t\t\t\t\tpredicateResponses[predicateId] = response;\n\t\t\t\t\t\tif (!predicateChanged && response !== previousDetails![predicateId]) {\n\t\t\t\t\t\t\tpredicateChanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._details.set(key, predicateResponses);\n\t\t\t\t} else {\n\t\t\t\t\tpredicateChanged = true;\n\t\t\t\t}\n\t\t\t\tpredicateChanged && this.invalidate();\n\t\t\t});\n\t\t\tresizeObserver.observe(node);\n\t\t\tthis.own({\n\t\t\t\tdestroy: () => {\n\t\t\t\t\tresizeObserver.disconnect();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this._details.get(key) as PredicateResponses<T>;\n\t}\n}\n\nexport default Resize;\n"]}