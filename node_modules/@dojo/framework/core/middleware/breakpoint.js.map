{"version":3,"file":"breakpoint.js","sourceRoot":"","sources":["breakpoint.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,gCAAiC;IACjC,mCAAkC;IAMlC,IAAM,OAAO,GAAG,aAAM,CAAC,EAAE,MAAM,iBAAA,EAAE,CAAC,CAAC;IAEnC,SAAgB,0BAA0B,CAAC,WAA+D;QAA/D,4BAAA,EAAA,gBAA6B,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE;QACzG,IAAM,kBAAkB,GAAgB,WAAW,CAAC;QACpD,IAAM,UAAU,GAAG,OAAO,CAAC,UAAC,EAA0B;gBAAV,6BAAM;YACjD,OAAO;gBACN,GAAG,EAAE,UAAC,GAAoB,EAAE,WAA6C;oBAA7C,4BAAA,EAAA,gCAA6C;oBACxE,IAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACpC,IAAI,CAAC,WAAW,EAAE;wBACjB,OAAO,IAAI,CAAC;qBACZ;oBACD,IAAI,iBAAiB,GAAG,IAAI,CAAC;oBAE7B,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACrC,IAAM,YAAU,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;wBACxC,IACC,WAAW,CAAC,KAAK,IAAI,YAAU;4BAC/B,CAAC,CAAC,iBAAiB,IAAI,YAAU,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAC1D;4BACD,iBAAiB,GAAG;gCACnB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;gCACb,IAAI,EAAE,YAAU;6BAChB,CAAC;yBACF;qBACD;oBAED,IAAI,iBAAiB,EAAE;wBACtB,OAAO;4BACN,UAAU,EAAE,iBAAiB,CAAC,IAAI;4BAClC,WAAW,aAAA;yBACX,CAAC;qBACF;oBACD,OAAO,IAAI,CAAC;gBACb,CAAC;aACD,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACnB,CAAC;IApCD,gEAoCC;IAED,IAAM,UAAU,GAAG,0BAA0B,EAAE,CAAC;IAEhD,kBAAe,UAAU,CAAC","sourcesContent":["import { create } from '../vdom';\nimport { resize } from './resize';\n\nexport interface Breakpoints {\n\t[index: string]: number;\n}\n\nconst factory = create({ resize });\n\nexport function createBreakpointMiddleware(breakpoints: Breakpoints = { SM: 0, MD: 576, LG: 768, XL: 960 }) {\n\tconst defaultBreakpoints: Breakpoints = breakpoints;\n\tconst breakpoint = factory(({ middleware: { resize } }) => {\n\t\treturn {\n\t\t\tget: (key: string | number, breakpoints: Breakpoints = defaultBreakpoints) => {\n\t\t\t\tconst contentRect = resize.get(key);\n\t\t\t\tif (!contentRect) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tlet currentBreakpoint = null;\n\n\t\t\t\tconst keys = Object.keys(breakpoints);\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\tconst breakpoint = breakpoints[keys[i]];\n\t\t\t\t\tif (\n\t\t\t\t\t\tcontentRect.width >= breakpoint &&\n\t\t\t\t\t\t(!currentBreakpoint || breakpoint > currentBreakpoint.size)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcurrentBreakpoint = {\n\t\t\t\t\t\t\tname: keys[i],\n\t\t\t\t\t\t\tsize: breakpoint\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (currentBreakpoint) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tbreakpoint: currentBreakpoint.name,\n\t\t\t\t\t\tcontentRect\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\t});\n\treturn breakpoint;\n}\n\nconst breakpoint = createBreakpointMiddleware();\n\nexport default breakpoint;\n"]}