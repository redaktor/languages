{"version":3,"file":"breakpoint.mjs","sourceRoot":"","sources":["breakpoint.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAMlC,MAAM,OAAO,GAAG,MAAM,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;AAEnC,MAAM,UAAU,0BAA0B,CAAC,cAA2B,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE;IACzG,MAAM,kBAAkB,GAAgB,WAAW,CAAC;IACpD,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE;QACzD,OAAO;YACN,GAAG,EAAE,CAAC,GAAoB,EAAE,cAA2B,kBAAkB,EAAE,EAAE;gBAC5E,MAAM,WAAW,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACpC,IAAI,CAAC,WAAW,EAAE;oBACjB,OAAO,IAAI,CAAC;iBACZ;gBACD,IAAI,iBAAiB,GAAG,IAAI,CAAC;gBAE7B,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACrC,MAAM,UAAU,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;oBACxC,IACC,WAAW,CAAC,KAAK,IAAI,UAAU;wBAC/B,CAAC,CAAC,iBAAiB,IAAI,UAAU,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAC1D;wBACD,iBAAiB,GAAG;4BACnB,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;4BACb,IAAI,EAAE,UAAU;yBAChB,CAAC;qBACF;iBACD;gBAED,IAAI,iBAAiB,EAAE;oBACtB,OAAO;wBACN,UAAU,EAAE,iBAAiB,CAAC,IAAI;wBAClC,WAAW;qBACX,CAAC;iBACF;gBACD,OAAO,IAAI,CAAC;YACb,CAAC;SACD,CAAC;IACH,CAAC,CAAC,CAAC;IACH,OAAO,UAAU,CAAC;AACnB,CAAC;AAED,MAAM,UAAU,GAAG,0BAA0B,EAAE,CAAC;AAEhD,eAAe,UAAU,CAAC","sourcesContent":["import { create } from '../vdom';\nimport { resize } from './resize';\n\nexport interface Breakpoints {\n\t[index: string]: number;\n}\n\nconst factory = create({ resize });\n\nexport function createBreakpointMiddleware(breakpoints: Breakpoints = { SM: 0, MD: 576, LG: 768, XL: 960 }) {\n\tconst defaultBreakpoints: Breakpoints = breakpoints;\n\tconst breakpoint = factory(({ middleware: { resize } }) => {\n\t\treturn {\n\t\t\tget: (key: string | number, breakpoints: Breakpoints = defaultBreakpoints) => {\n\t\t\t\tconst contentRect = resize.get(key);\n\t\t\t\tif (!contentRect) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tlet currentBreakpoint = null;\n\n\t\t\t\tconst keys = Object.keys(breakpoints);\n\t\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\t\tconst breakpoint = breakpoints[keys[i]];\n\t\t\t\t\tif (\n\t\t\t\t\t\tcontentRect.width >= breakpoint &&\n\t\t\t\t\t\t(!currentBreakpoint || breakpoint > currentBreakpoint.size)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcurrentBreakpoint = {\n\t\t\t\t\t\t\tname: keys[i],\n\t\t\t\t\t\t\tsize: breakpoint\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (currentBreakpoint) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tbreakpoint: currentBreakpoint.name,\n\t\t\t\t\t\tcontentRect\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\t});\n\treturn breakpoint;\n}\n\nconst breakpoint = createBreakpointMiddleware();\n\nexport default breakpoint;\n"]}