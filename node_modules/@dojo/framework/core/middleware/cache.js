(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../vdom", "../../shim/Map"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var vdom_1 = require("../vdom");
    var Map_1 = require("../../shim/Map");
    var factory = vdom_1.create({ destroy: vdom_1.destroy });
    exports.cache = factory(function (_a) {
        var destroy = _a.middleware.destroy;
        var cacheMap = new Map_1.default();
        destroy(function () {
            cacheMap.clear();
        });
        return {
            get: function (key) {
                return cacheMap.get(key);
            },
            set: function (key, value) {
                cacheMap.set(key, value);
            },
            clear: function () {
                cacheMap.clear();
            }
        };
    });
    exports.default = exports.cache;
});
//# sourceMappingURL=cache.js.map