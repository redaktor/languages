{"version":3,"file":"cache.js","sourceRoot":"","sources":["cache.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,gCAA0C;IAC1C,sCAAiC;IAEjC,IAAM,OAAO,GAAG,aAAM,CAAC,EAAE,OAAO,gBAAA,EAAE,CAAC,CAAC;IAEvB,QAAA,KAAK,GAAG,OAAO,CAAC,UAAC,EAA2B;YAAX,+BAAO;QACpD,IAAM,QAAQ,GAAG,IAAI,aAAG,EAAe,CAAC;QACxC,OAAO,CAAC;YACP,QAAQ,CAAC,KAAK,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,OAAO;YACN,GAAG,EAAH,UAAa,GAAQ;gBACpB,OAAO,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC1B,CAAC;YACD,GAAG,EAAH,UAAa,GAAQ,EAAE,KAAQ;gBAC9B,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAC1B,CAAC;YACD,KAAK,EAAL;gBACC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAClB,CAAC;SACD,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,kBAAe,aAAK,CAAC","sourcesContent":["import { create, destroy } from '../vdom';\nimport Map from '../../shim/Map';\n\nconst factory = create({ destroy });\n\nexport const cache = factory(({ middleware: { destroy } }) => {\n\tconst cacheMap = new Map<string, any>();\n\tdestroy(() => {\n\t\tcacheMap.clear();\n\t});\n\treturn {\n\t\tget<T = any>(key: any): T | undefined {\n\t\t\treturn cacheMap.get(key);\n\t\t},\n\t\tset<T = any>(key: any, value: T): void {\n\t\t\tcacheMap.set(key, value);\n\t\t},\n\t\tclear(): void {\n\t\t\tcacheMap.clear();\n\t\t}\n\t};\n});\n\nexport default cache;\n"]}