{"version":3,"file":"dimensions.mjs","sourceRoot":"","sources":["dimensions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,SAAS,CAAC;AAGvC,MAAM,OAAO,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AAEjC,MAAM,iBAAiB,GAAG;IACzB,MAAM,EAAE;QACP,MAAM,EAAE,CAAC;QACT,IAAI,EAAE,CAAC;QACP,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,CAAC;KACR;IACD,MAAM,EAAE;QACP,MAAM,EAAE,CAAC;QACT,IAAI,EAAE,CAAC;QACP,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,CAAC;KACR;IACD,QAAQ,EAAE;QACT,MAAM,EAAE,CAAC;QACT,IAAI,EAAE,CAAC;QACP,KAAK,EAAE,CAAC;QACR,GAAG,EAAE,CAAC;KACN;IACD,MAAM,EAAE;QACP,MAAM,EAAE,CAAC;QACT,IAAI,EAAE,CAAC;QACP,GAAG,EAAE,CAAC;QACN,KAAK,EAAE,CAAC;KACR;IACD,IAAI,EAAE;QACL,KAAK,EAAE,CAAC;QACR,MAAM,EAAE,CAAC;KACT;CACD,CAAC;AAEF,MAAM,CAAC,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE;IAC9D,OAAO;QACN,GAAG,CAAC,GAAoB;YACvB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO;oBACN,MAAM,oBAAO,iBAAiB,CAAC,MAAM,CAAE;oBACvC,MAAM,oBAAO,iBAAiB,CAAC,MAAM,CAAE;oBACvC,QAAQ,oBAAO,iBAAiB,CAAC,QAAQ,CAAE;oBAC3C,MAAM,oBAAO,iBAAiB,CAAC,MAAM,CAAE;oBACvC,IAAI,oBAAO,iBAAiB,CAAC,IAAI,CAAE;iBACnC,CAAC;aACF;YAED,MAAM,kBAAkB,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;YAC3D,MAAM,MAAM,GAAG;gBACd,MAAM,EAAE;oBACP,MAAM,EAAE,OAAO,CAAC,YAAY;oBAC5B,IAAI,EAAE,OAAO,CAAC,UAAU;oBACxB,GAAG,EAAE,OAAO,CAAC,SAAS;oBACtB,KAAK,EAAE,OAAO,CAAC,WAAW;iBAC1B;gBACD,MAAM,EAAE;oBACP,MAAM,EAAE,OAAO,CAAC,YAAY;oBAC5B,IAAI,EAAE,OAAO,CAAC,UAAU;oBACxB,GAAG,EAAE,OAAO,CAAC,SAAS;oBACtB,KAAK,EAAE,OAAO,CAAC,WAAW;iBAC1B;gBACD,QAAQ,EAAE;oBACT,MAAM,EAAE,kBAAkB,CAAC,MAAM;oBACjC,IAAI,EAAE,kBAAkB,CAAC,IAAI;oBAC7B,KAAK,EAAE,kBAAkB,CAAC,KAAK;oBAC/B,GAAG,EAAE,kBAAkB,CAAC,GAAG;iBAC3B;gBACD,MAAM,EAAE;oBACP,MAAM,EAAE,OAAO,CAAC,YAAY;oBAC5B,IAAI,EAAE,OAAO,CAAC,UAAU;oBACxB,GAAG,EAAE,OAAO,CAAC,SAAS;oBACtB,KAAK,EAAE,OAAO,CAAC,WAAW;iBAC1B;gBACD,IAAI,EAAE;oBACL,KAAK,EAAE,kBAAkB,CAAC,KAAK;oBAC/B,MAAM,EAAE,kBAAkB,CAAC,MAAM;iBACjC;aACD,CAAC;YACF,OAAO,MAAM,CAAC;QACf,CAAC;KACD,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,eAAe,UAAU,CAAC","sourcesContent":["import { create, node } from '../vdom';\nimport { DimensionResults } from '../meta/Dimensions';\n\nconst factory = create({ node });\n\nconst defaultDimensions = {\n\tclient: {\n\t\theight: 0,\n\t\tleft: 0,\n\t\ttop: 0,\n\t\twidth: 0\n\t},\n\toffset: {\n\t\theight: 0,\n\t\tleft: 0,\n\t\ttop: 0,\n\t\twidth: 0\n\t},\n\tposition: {\n\t\tbottom: 0,\n\t\tleft: 0,\n\t\tright: 0,\n\t\ttop: 0\n\t},\n\tscroll: {\n\t\theight: 0,\n\t\tleft: 0,\n\t\ttop: 0,\n\t\twidth: 0\n\t},\n\tsize: {\n\t\twidth: 0,\n\t\theight: 0\n\t}\n};\n\nexport const dimensions = factory(({ middleware: { node } }) => {\n\treturn {\n\t\tget(key: string | number): Readonly<DimensionResults> {\n\t\t\tconst domNode = node.get(key);\n\t\t\tif (!domNode) {\n\t\t\t\treturn {\n\t\t\t\t\tclient: { ...defaultDimensions.client },\n\t\t\t\t\toffset: { ...defaultDimensions.offset },\n\t\t\t\t\tposition: { ...defaultDimensions.position },\n\t\t\t\t\tscroll: { ...defaultDimensions.scroll },\n\t\t\t\t\tsize: { ...defaultDimensions.size }\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst boundingDimensions = domNode.getBoundingClientRect();\n\t\t\tconst result = {\n\t\t\t\tclient: {\n\t\t\t\t\theight: domNode.clientHeight,\n\t\t\t\t\tleft: domNode.clientLeft,\n\t\t\t\t\ttop: domNode.clientTop,\n\t\t\t\t\twidth: domNode.clientWidth\n\t\t\t\t},\n\t\t\t\toffset: {\n\t\t\t\t\theight: domNode.offsetHeight,\n\t\t\t\t\tleft: domNode.offsetLeft,\n\t\t\t\t\ttop: domNode.offsetTop,\n\t\t\t\t\twidth: domNode.offsetWidth\n\t\t\t\t},\n\t\t\t\tposition: {\n\t\t\t\t\tbottom: boundingDimensions.bottom,\n\t\t\t\t\tleft: boundingDimensions.left,\n\t\t\t\t\tright: boundingDimensions.right,\n\t\t\t\t\ttop: boundingDimensions.top\n\t\t\t\t},\n\t\t\t\tscroll: {\n\t\t\t\t\theight: domNode.scrollHeight,\n\t\t\t\t\tleft: domNode.scrollLeft,\n\t\t\t\t\ttop: domNode.scrollTop,\n\t\t\t\t\twidth: domNode.scrollWidth\n\t\t\t\t},\n\t\t\t\tsize: {\n\t\t\t\t\twidth: boundingDimensions.width,\n\t\t\t\t\theight: boundingDimensions.height\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn result;\n\t\t}\n\t};\n});\n\nexport default dimensions;\n"]}