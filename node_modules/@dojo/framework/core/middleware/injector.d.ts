export declare const injector: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, {
    getRegistry: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").MiddlewareMap<() => {
        api: {};
        properties: {};
    }>, () => import("../RegistryHandler").RegistryHandler | null>;
    invalidator: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").MiddlewareMap<() => {
        api: {};
        properties: {};
    }>, () => void>;
    destroy: import("../interfaces").MiddlewareResultFactory<import("../interfaces").WidgetProperties, import("../interfaces").MiddlewareMap<() => {
        api: {};
        properties: {};
    }>, (destroyFunction: () => void) => void>;
}, {
    subscribe(label: string | symbol, callback?: Function): (() => void) | undefined;
    get<T>(label: string | symbol): T | null;
}>;
export default injector;
