{"version":3,"file":"intersection.js","sourceRoot":"","sources":["intersection.ts"],"names":[],"mappings":"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","sourcesContent":["import WeakMap from '../../shim/WeakMap';\nimport IntersectionObserver from '../../shim/IntersectionObserver';\nimport { create, node, invalidator, destroy } from '../vdom';\nimport cache from './cache';\nimport {\n\tIntersectionResult,\n\tIntersectionGetOptions,\n\tIntersectionDetail,\n\tExtendedIntersectionObserverEntry\n} from '../meta/Intersection';\n\nconst defaultIntersection: IntersectionResult = Object.freeze({\n\tintersectionRatio: 0,\n\tisIntersecting: false\n});\n\nconst factory = create({ cache, node, invalidator, destroy });\n\nexport const intersection = factory(({ middleware: { cache, node, invalidator, destroy } }) => {\n\tconst handles: Function[] = [];\n\tdestroy(() => {\n\t\tlet handle: any;\n\t\twhile ((handle = handles.pop())) {\n\t\t\thandle && handle();\n\t\t}\n\t});\n\n\tfunction _createDetails(options: IntersectionGetOptions, rootNode?: HTMLElement): IntersectionDetail {\n\t\tconst entries = new WeakMap<HTMLElement, ExtendedIntersectionObserverEntry>();\n\t\tconst observer = new IntersectionObserver(_onIntersect(entries), {\n\t\t\t...options,\n\t\t\troot: rootNode\n\t\t});\n\t\tconst details = { observer, entries, ...options };\n\t\tcache.set(JSON.stringify(options), details);\n\t\thandles.push(() => observer.disconnect());\n\t\treturn details;\n\t}\n\n\tfunction _getDetails(options: IntersectionGetOptions = {}): IntersectionDetail | undefined {\n\t\treturn cache.get(JSON.stringify(options));\n\t}\n\n\tfunction _onIntersect(detailEntries: WeakMap<Element, IntersectionResult>) {\n\t\treturn (entries: ExtendedIntersectionObserverEntry[]) => {\n\t\t\tfor (const { intersectionRatio, isIntersecting, target } of entries) {\n\t\t\t\tdetailEntries.set(target, { intersectionRatio, isIntersecting });\n\t\t\t}\n\t\t\tinvalidator();\n\t\t};\n\t}\n\n\treturn {\n\t\tget(key: string | number, options: IntersectionGetOptions = {}): IntersectionResult {\n\t\t\tlet rootNode: HTMLElement | undefined;\n\t\t\tif (options.root) {\n\t\t\t\trootNode = node.get(options.root) as HTMLElement;\n\t\t\t\tif (!rootNode) {\n\t\t\t\t\treturn defaultIntersection;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst domNode = node.get(key) as HTMLElement | null;\n\t\t\tif (!domNode) {\n\t\t\t\treturn defaultIntersection;\n\t\t\t}\n\n\t\t\tlet details = _getDetails(options) || _createDetails(options, rootNode);\n\t\t\tif (!details.entries.get(domNode)) {\n\t\t\t\tdetails.entries.set(domNode, defaultIntersection);\n\t\t\t\tdetails.observer.observe(domNode);\n\t\t\t}\n\n\t\t\treturn details.entries.get(domNode) || defaultIntersection;\n\t\t}\n\t};\n});\n\nexport default intersection;\n"]}