{"version":3,"file":"intersection.mjs","sourceRoot":"","sources":["intersection.ts"],"names":[],"mappings":"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","sourcesContent":["import WeakMap from '../../shim/WeakMap';\nimport IntersectionObserver from '../../shim/IntersectionObserver';\nimport { create, node, invalidator, destroy } from '../vdom';\nimport cache from './cache';\nimport {\n\tIntersectionResult,\n\tIntersectionGetOptions,\n\tIntersectionDetail,\n\tExtendedIntersectionObserverEntry\n} from '../meta/Intersection';\n\nconst defaultIntersection: IntersectionResult = Object.freeze({\n\tintersectionRatio: 0,\n\tisIntersecting: false\n});\n\nconst factory = create({ cache, node, invalidator, destroy });\n\nexport const intersection = factory(({ middleware: { cache, node, invalidator, destroy } }) => {\n\tconst handles: Function[] = [];\n\tdestroy(() => {\n\t\tlet handle: any;\n\t\twhile ((handle = handles.pop())) {\n\t\t\thandle && handle();\n\t\t}\n\t});\n\n\tfunction _createDetails(options: IntersectionGetOptions, rootNode?: HTMLElement): IntersectionDetail {\n\t\tconst entries = new WeakMap<HTMLElement, ExtendedIntersectionObserverEntry>();\n\t\tconst observer = new IntersectionObserver(_onIntersect(entries), {\n\t\t\t...options,\n\t\t\troot: rootNode\n\t\t});\n\t\tconst details = { observer, entries, ...options };\n\t\tcache.set(JSON.stringify(options), details);\n\t\thandles.push(() => observer.disconnect());\n\t\treturn details;\n\t}\n\n\tfunction _getDetails(options: IntersectionGetOptions = {}): IntersectionDetail | undefined {\n\t\treturn cache.get(JSON.stringify(options));\n\t}\n\n\tfunction _onIntersect(detailEntries: WeakMap<Element, IntersectionResult>) {\n\t\treturn (entries: ExtendedIntersectionObserverEntry[]) => {\n\t\t\tfor (const { intersectionRatio, isIntersecting, target } of entries) {\n\t\t\t\tdetailEntries.set(target, { intersectionRatio, isIntersecting });\n\t\t\t}\n\t\t\tinvalidator();\n\t\t};\n\t}\n\n\treturn {\n\t\tget(key: string | number, options: IntersectionGetOptions = {}): IntersectionResult {\n\t\t\tlet rootNode: HTMLElement | undefined;\n\t\t\tif (options.root) {\n\t\t\t\trootNode = node.get(options.root) as HTMLElement;\n\t\t\t\tif (!rootNode) {\n\t\t\t\t\treturn defaultIntersection;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst domNode = node.get(key) as HTMLElement | null;\n\t\t\tif (!domNode) {\n\t\t\t\treturn defaultIntersection;\n\t\t\t}\n\n\t\t\tlet details = _getDetails(options) || _createDetails(options, rootNode);\n\t\t\tif (!details.entries.get(domNode)) {\n\t\t\t\tdetails.entries.set(domNode, defaultIntersection);\n\t\t\t\tdetails.observer.observe(domNode);\n\t\t\t}\n\n\t\t\treturn details.entries.get(domNode) || defaultIntersection;\n\t\t}\n\t};\n});\n\nexport default intersection;\n"]}