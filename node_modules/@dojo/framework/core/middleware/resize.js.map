{"version":3,"file":"resize.js","sourceRoot":"","sources":["resize.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,4DAA4E;IAC5E,gCAAgD;IAChD,mCAAkC;IAElC,IAAM,OAAO,GAAG,aAAM,CAAC,EAAE,IAAI,aAAA,EAAE,OAAO,gBAAA,EAAE,MAAM,iBAAA,EAAE,CAAC,CAAC;IAErC,QAAA,MAAM,GAAG,OAAO,CAAC,UAAC,EAAyC;YAAvC,kBAAqC,EAAvB,cAAI,EAAE,oBAAO,EAAE,kBAAM;QACnE,IAAM,IAAI,GAAwB,EAAE,CAAC;QACrC,IAAM,OAAO,GAAe,EAAE,CAAC;QAC/B,OAAO,CAAC;YACP,IAAI,MAAW,CAAC;YAChB,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;gBAChC,MAAM,IAAI,MAAM,EAAE,CAAC;aACnB;QACF,CAAC,CAAC,CAAC;QACH,OAAO;YACN,GAAG,EAAH,UAAI,GAAoB;gBACvB,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC9B,IAAI,CAAC,OAAO,EAAE;oBACb,OAAO,IAAI,CAAC;iBACZ;gBAED,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACf,IAAM,gBAAc,GAAG,IAAI,wBAAc,CAAC,UAAC,EAAO;4BAAP,0BAAO,EAAN,aAAK;wBAChD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;oBACpC,CAAC,CAAC,CAAC;oBACH,gBAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;oBAChC,OAAO,CAAC,IAAI,CAAC,cAAM,OAAA,gBAAc,CAAC,UAAU,EAAE,EAA3B,CAA2B,CAAC,CAAC;iBAChD;gBACD,OAAO,MAAM,CAAC,GAAG,CAAkB,GAAG,CAAC,IAAI,IAAI,CAAC;YACjD,CAAC;SACD,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,kBAAe,cAAM,CAAC","sourcesContent":["import ResizeObserver, { DOMRectReadOnly } from '../../shim/ResizeObserver';\nimport { create, node, destroy } from '../vdom';\nimport { icache } from './icache';\n\nconst factory = create({ node, destroy, icache });\n\nexport const resize = factory(({ middleware: { node, destroy, icache } }) => {\n\tconst keys: (string | number)[] = [];\n\tconst handles: Function[] = [];\n\tdestroy(() => {\n\t\tlet handle: any;\n\t\twhile ((handle = handles.pop())) {\n\t\t\thandle && handle();\n\t\t}\n\t});\n\treturn {\n\t\tget(key: string | number): DOMRectReadOnly | null {\n\t\t\tconst domNode = node.get(key);\n\t\t\tif (!domNode) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\tkeys.push(key);\n\t\t\t\tconst resizeObserver = new ResizeObserver(([entry]) => {\n\t\t\t\t\ticache.set(key, entry.contentRect);\n\t\t\t\t});\n\t\t\t\tresizeObserver.observe(domNode);\n\t\t\t\thandles.push(() => resizeObserver.disconnect());\n\t\t\t}\n\t\t\treturn icache.get<DOMRectReadOnly>(key) || null;\n\t\t}\n\t};\n});\n\nexport default resize;\n"]}