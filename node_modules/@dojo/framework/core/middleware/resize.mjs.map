{"version":3,"file":"resize.mjs","sourceRoot":"","sources":["resize.ts"],"names":[],"mappings":"AAAA,OAAO,cAAmC,MAAM,2BAA2B,CAAC;AAC5E,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAElC,MAAM,OAAO,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;AAElD,MAAM,CAAC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE;IAC3E,MAAM,IAAI,GAAwB,EAAE,CAAC;IACrC,MAAM,OAAO,GAAe,EAAE,CAAC;IAC/B,OAAO,CAAC,GAAG,EAAE;QACZ,IAAI,MAAW,CAAC;QAChB,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE;YAChC,MAAM,IAAI,MAAM,EAAE,CAAC;SACnB;IACF,CAAC,CAAC,CAAC;IACH,OAAO;QACN,GAAG,CAAC,GAAoB;YACvB,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAC9B,IAAI,CAAC,OAAO,EAAE;gBACb,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACf,MAAM,cAAc,GAAG,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE;oBACrD,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;gBACH,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAChC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,CAAC;aAChD;YACD,OAAO,MAAM,CAAC,GAAG,CAAkB,GAAG,CAAC,IAAI,IAAI,CAAC;QACjD,CAAC;KACD,CAAC;AACH,CAAC,CAAC,CAAC;AAEH,eAAe,MAAM,CAAC","sourcesContent":["import ResizeObserver, { DOMRectReadOnly } from '../../shim/ResizeObserver';\nimport { create, node, destroy } from '../vdom';\nimport { icache } from './icache';\n\nconst factory = create({ node, destroy, icache });\n\nexport const resize = factory(({ middleware: { node, destroy, icache } }) => {\n\tconst keys: (string | number)[] = [];\n\tconst handles: Function[] = [];\n\tdestroy(() => {\n\t\tlet handle: any;\n\t\twhile ((handle = handles.pop())) {\n\t\t\thandle && handle();\n\t\t}\n\t});\n\treturn {\n\t\tget(key: string | number): DOMRectReadOnly | null {\n\t\t\tconst domNode = node.get(key);\n\t\t\tif (!domNode) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\tkeys.push(key);\n\t\t\t\tconst resizeObserver = new ResizeObserver(([entry]) => {\n\t\t\t\t\ticache.set(key, entry.contentRect);\n\t\t\t\t});\n\t\t\t\tresizeObserver.observe(domNode);\n\t\t\t\thandles.push(() => resizeObserver.disconnect());\n\t\t\t}\n\t\t\treturn icache.get<DOMRectReadOnly>(key) || null;\n\t\t}\n\t};\n});\n\nexport default resize;\n"]}