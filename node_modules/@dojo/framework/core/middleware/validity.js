(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../vdom"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var vdom_1 = require("../vdom");
    var factory = vdom_1.create({ node: vdom_1.node, invalidator: vdom_1.invalidator });
    var validity = factory(function (_a) {
        var _b = _a.middleware, node = _b.node, invalidator = _b.invalidator;
        return {
            get: function (key, value) {
                var domNode = node.get(key);
                if (!domNode) {
                    return { valid: undefined, message: '' };
                }
                if (value !== domNode.value) {
                    setTimeout(function () { return invalidator(); });
                }
                return {
                    valid: domNode.validity.valid,
                    message: domNode.validationMessage
                };
            }
        };
    });
    exports.default = validity;
});
//# sourceMappingURL=validity.js.map