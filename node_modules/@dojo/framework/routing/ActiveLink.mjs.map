{"version":3,"file":"ActiveLink.mjs","sourceRoot":"","sources":["ActiveLink.ts"],"names":[],"mappings":"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","sourcesContent":["import { create, diffProperty, invalidator, w } from '../core/vdom';\nimport { Handle } from '../core/Destroyable';\nimport injector from '../core/middleware/injector';\nimport cache from '../core/middleware/cache';\nimport { SupportedClassName } from '../core/interfaces';\nimport Link, { LinkProperties } from './Link';\nimport Router from './Router';\n\nexport interface ActiveLinkProperties extends LinkProperties {\n\tactiveClasses: SupportedClassName[];\n}\n\nfunction paramsEqual(linkParams: any = {}, contextParams: any = {}) {\n\treturn Object.keys(linkParams).every((key) => linkParams[key] === contextParams[key]);\n}\n\nconst factory = create({ injector, diffProperty, cache, invalidator }).properties<ActiveLinkProperties>();\n\nexport const ActiveLink = factory(function ActiveLink({\n\tmiddleware: { diffProperty, injector, cache, invalidator },\n\tproperties,\n\tchildren\n}) {\n\tconst { to, routerKey = 'router', params } = properties();\n\tlet { activeClasses, classes = [], ...props } = properties();\n\n\tdiffProperty('to', (current: ActiveLinkProperties, next: ActiveLinkProperties) => {\n\t\tif (current.to !== next.to) {\n\t\t\tconst router = injector.get<Router>(routerKey);\n\t\t\tconst currentHandle = cache.get<Handle>('handle');\n\t\t\tif (currentHandle) {\n\t\t\t\tcurrentHandle.destroy();\n\t\t\t}\n\t\t\tif (router) {\n\t\t\t\tconst handle = router.on('outlet', ({ outlet }) => {\n\t\t\t\t\tif (outlet.id === to) {\n\t\t\t\t\t\tinvalidator();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tcache.set('handle', handle);\n\t\t\t}\n\t\t\tinvalidator();\n\t\t}\n\t});\n\n\tconst router = injector.get<Router>(routerKey);\n\tif (router) {\n\t\tif (!cache.get('handle')) {\n\t\t\tconst handle = router.on('outlet', ({ outlet }) => {\n\t\t\t\tif (outlet.id === to) {\n\t\t\t\t\tinvalidator();\n\t\t\t\t}\n\t\t\t});\n\t\t\tcache.set('handle', handle);\n\t\t}\n\t\tconst context = router.getOutlet(to);\n\t\tconst isActive = context && paramsEqual(params, context.params);\n\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tif (isActive) {\n\t\t\tclasses = [...classes, ...activeClasses];\n\t\t}\n\t\tprops = { ...props, classes };\n\t}\n\treturn w(Link, props, children());\n});\n\nexport default ActiveLink;\n"]}