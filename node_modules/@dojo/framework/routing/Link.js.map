{"version":3,"file":"Link.js","sourceRoot":"","sources":["Link.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,qCAAyC;IACzC,wDAAmD;IAcnD,IAAM,OAAO,GAAG,aAAM,CAAC,EAAE,QAAQ,oBAAA,EAAE,CAAC,CAAC,UAAU,EAAkB,CAAC;IAErD,QAAA,IAAI,GAAG,OAAO,CAAC,SAAS,IAAI,CAAC,EAAkD;YAAlC,iCAAQ,EAAI,0BAAU,EAAE,sBAAQ;QACzF,IAAI,iBAAoG,EAAlG,iBAAoB,EAApB,yCAAoB,EAAE,UAAE,EAAE,gBAAe,EAAf,oCAAe,EAAE,kBAAM,EAAE,cAAW,EAAX,gCAAW,EAAE,oBAAO,EAAE,0FAAyB,CAAC;QACzG,IAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAS,SAAS,CAAC,CAAC;QAC/C,IAAI,IAAI,GAAuB,EAAE,CAAC;QAElC,IAAI,SAA0B,CAAC;QAC/B,IAAI,MAAM,EAAE;YACX,IAAI,QAAQ,EAAE;gBACb,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aACjC;YACD,IAAM,SAAO,GAAG,UAAC,KAAiB;gBACjC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;gBAE1B,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE;oBACjG,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;iBAC3C;YACF,CAAC,CAAC;YACF,SAAS,wBAAQ,KAAK,IAAE,OAAO,WAAA,EAAE,IAAI,MAAA,GAAE,CAAC;SACxC;aAAM;YACN,SAAS,wBAAQ,KAAK,IAAE,IAAI,MAAA,GAAE,CAAC;SAC/B;QACD,OAAO,QAAC,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,kBAAe,YAAI,CAAC","sourcesContent":["import { create, v } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport { VNodeProperties } from '../core/interfaces';\nimport { Params } from './interfaces';\nimport Router from './Router';\n\nexport interface LinkProperties extends VNodeProperties {\n\tkey?: string;\n\trouterKey?: string;\n\tisOutlet?: boolean;\n\tparams?: Params;\n\tonClick?: (event: MouseEvent) => void;\n\tto: string;\n}\n\nconst factory = create({ injector }).properties<LinkProperties>();\n\nexport const Link = factory(function Link({ middleware: { injector }, properties, children }) {\n\tlet { routerKey = 'router', to, isOutlet = true, target, params = {}, onClick, ...props } = properties();\n\tconst router = injector.get<Router>(routerKey);\n\tlet href: string | undefined = to;\n\n\tlet linkProps: VNodeProperties;\n\tif (router) {\n\t\tif (isOutlet) {\n\t\t\thref = router.link(href, params);\n\t\t}\n\t\tconst onclick = (event: MouseEvent) => {\n\t\t\tonClick && onClick(event);\n\n\t\t\tif (!event.defaultPrevented && event.button === 0 && !event.metaKey && !event.ctrlKey && !target) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\thref !== undefined && router.setPath(href);\n\t\t\t}\n\t\t};\n\t\tlinkProps = { ...props, onclick, href };\n\t} else {\n\t\tlinkProps = { ...props, href };\n\t}\n\treturn v('a', linkProps, children());\n});\n\nexport default Link;\n"]}