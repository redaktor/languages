{"version":3,"file":"Link.mjs","sourceRoot":"","sources":["Link.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,QAAQ,MAAM,6BAA6B,CAAC;AAcnD,MAAM,OAAO,GAAG,MAAM,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC,UAAU,EAAkB,CAAC;AAElE,MAAM,CAAC,MAAM,IAAI,GAAG,OAAO,CAAC,SAAS,IAAI,CAAC,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC3F,IAAI,iBAAoG,EAApG,EAAE,SAAS,GAAG,QAAQ,EAAE,EAAE,EAAE,QAAQ,GAAG,IAAI,EAAE,MAAM,EAAE,MAAM,GAAG,EAAE,EAAE,OAAO,OAA2B,EAAzB,kFAAyB,CAAC;IACzG,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAS,SAAS,CAAC,CAAC;IAC/C,IAAI,IAAI,GAAuB,EAAE,CAAC;IAElC,IAAI,SAA0B,CAAC;IAC/B,IAAI,MAAM,EAAE;QACX,IAAI,QAAQ,EAAE;YACb,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACjC;QACD,MAAM,OAAO,GAAG,CAAC,KAAiB,EAAE,EAAE;YACrC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;YAE1B,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE;gBACjG,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,KAAK,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aAC3C;QACF,CAAC,CAAC;QACF,SAAS,qBAAQ,KAAK,IAAE,OAAO,EAAE,IAAI,GAAE,CAAC;KACxC;SAAM;QACN,SAAS,qBAAQ,KAAK,IAAE,IAAI,GAAE,CAAC;KAC/B;IACD,OAAO,CAAC,CAAC,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,eAAe,IAAI,CAAC","sourcesContent":["import { create, v } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport { VNodeProperties } from '../core/interfaces';\nimport { Params } from './interfaces';\nimport Router from './Router';\n\nexport interface LinkProperties extends VNodeProperties {\n\tkey?: string;\n\trouterKey?: string;\n\tisOutlet?: boolean;\n\tparams?: Params;\n\tonClick?: (event: MouseEvent) => void;\n\tto: string;\n}\n\nconst factory = create({ injector }).properties<LinkProperties>();\n\nexport const Link = factory(function Link({ middleware: { injector }, properties, children }) {\n\tlet { routerKey = 'router', to, isOutlet = true, target, params = {}, onClick, ...props } = properties();\n\tconst router = injector.get<Router>(routerKey);\n\tlet href: string | undefined = to;\n\n\tlet linkProps: VNodeProperties;\n\tif (router) {\n\t\tif (isOutlet) {\n\t\t\thref = router.link(href, params);\n\t\t}\n\t\tconst onclick = (event: MouseEvent) => {\n\t\t\tonClick && onClick(event);\n\n\t\t\tif (!event.defaultPrevented && event.button === 0 && !event.metaKey && !event.ctrlKey && !target) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\thref !== undefined && router.setPath(href);\n\t\t\t}\n\t\t};\n\t\tlinkProps = { ...props, onclick, href };\n\t} else {\n\t\tlinkProps = { ...props, href };\n\t}\n\treturn v('a', linkProps, children());\n});\n\nexport default Link;\n"]}