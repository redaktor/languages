{"version":3,"file":"Outlet.js","sourceRoot":"","sources":["Outlet.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,qCAAiE;IACjE,wDAAmD;IACnD,kDAA6C;IAW7C,IAAM,OAAO,GAAG,aAAM,CAAC,EAAE,KAAK,iBAAA,EAAE,QAAQ,oBAAA,EAAE,YAAY,qBAAA,EAAE,WAAW,oBAAA,EAAE,CAAC,CAAC,UAAU,EAAoB,CAAC;IAEzF,QAAA,MAAM,GAAG,OAAO,CAAC,SAAS,MAAM,CAAC,EAG7C;YAFA,kBAA0D,EAA5C,gBAAK,EAAE,sBAAQ,EAAE,8BAAY,EAAE,4BAAW,EACxD,0BAAU;QAEJ,IAAA,iBAAqD,EAAnD,sBAAQ,EAAE,UAAE,EAAE,iBAAoB,EAApB,yCAAqC,CAAC;QAC5D,IAAM,aAAa,GAAG,KAAK,CAAC,GAAG,CAAW,QAAQ,CAAC,CAAC;QACpD,IAAI,CAAC,aAAa,EAAE;YACnB,IAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;YAC7C,IAAI,MAAM,EAAE;gBACX,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aAC5B;SACD;QACD,YAAY,CAAC,WAAW,EAAE,UAAC,OAAyB,EAAE,IAAsB;YACnE,IAAA,sBAAsC,EAAtC,gDAAsC,CAAa;YACnD,IAAA,mBAAoB,EAApB,yCAAoB,CAAU;YACtC,IAAI,SAAS,KAAK,gBAAgB,EAAE;gBACnC,IAAM,eAAa,GAAG,KAAK,CAAC,GAAG,CAAW,QAAQ,CAAC,CAAC;gBACpD,IAAI,eAAa,EAAE;oBAClB,eAAa,EAAE,CAAC;iBAChB;gBACD,IAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;gBAC7C,IAAI,MAAM,EAAE;oBACX,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;iBAC5B;aACD;YACD,WAAW,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;QACH,IAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAS,SAAS,CAAC,CAAC;QAE/C,IAAI,MAAM,EAAE;YACX,IAAM,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAC3C,IAAI,aAAa,EAAE;gBACV,IAAA,uCAAW,EAAE,6BAAM,EAAE,yBAAI,EAAE,+BAAO,EAAE,+BAAO,CAAmB;gBACtE,IAAM,MAAM,GAAG,QAAQ,CAAC,EAAE,WAAW,aAAA,EAAE,MAAM,QAAA,EAAE,IAAI,MAAA,EAAE,OAAO,SAAA,EAAE,OAAO,SAAA,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;gBACjF,IAAI,MAAM,EAAE;oBACX,OAAO,MAAM,CAAC;iBACd;aACD;SACD;QACD,OAAO,IAAI,CAAC;IACb,CAAC,CAAC,CAAC;IAEH,kBAAe,cAAM,CAAC","sourcesContent":["import { create, diffProperty, invalidator } from '../core/vdom';\nimport injector from '../core/middleware/injector';\nimport cache from '../core/middleware/cache';\nimport { DNode } from '../core/interfaces';\nimport { MatchDetails } from './interfaces';\nimport Router from './Router';\n\nexport interface OutletProperties {\n\trenderer: (matchDetails: MatchDetails) => DNode | DNode[];\n\tid: string;\n\trouterKey?: string;\n}\n\nconst factory = create({ cache, injector, diffProperty, invalidator }).properties<OutletProperties>();\n\nexport const Outlet = factory(function Outlet({\n\tmiddleware: { cache, injector, diffProperty, invalidator },\n\tproperties\n}) {\n\tconst { renderer, id, routerKey = 'router' } = properties();\n\tconst currentHandle = cache.get<Function>('handle');\n\tif (!currentHandle) {\n\t\tconst handle = injector.subscribe(routerKey);\n\t\tif (handle) {\n\t\t\tcache.set('handle', handle);\n\t\t}\n\t}\n\tdiffProperty('routerKey', (current: OutletProperties, next: OutletProperties) => {\n\t\tconst { routerKey: currentRouterKey = 'router' } = current;\n\t\tconst { routerKey = 'router' } = next;\n\t\tif (routerKey !== currentRouterKey) {\n\t\t\tconst currentHandle = cache.get<Function>('handle');\n\t\t\tif (currentHandle) {\n\t\t\t\tcurrentHandle();\n\t\t\t}\n\t\t\tconst handle = injector.subscribe(routerKey);\n\t\t\tif (handle) {\n\t\t\t\tcache.set('handle', handle);\n\t\t\t}\n\t\t}\n\t\tinvalidator();\n\t});\n\tconst router = injector.get<Router>(routerKey);\n\n\tif (router) {\n\t\tconst outletContext = router.getOutlet(id);\n\t\tif (outletContext) {\n\t\t\tconst { queryParams, params, type, isError, isExact } = outletContext;\n\t\t\tconst result = renderer({ queryParams, params, type, isError, isExact, router });\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\treturn null;\n});\n\nexport default Outlet;\n"]}