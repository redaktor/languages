{"version":3,"file":"Router.js","sourceRoot":"","sources":["Router.ts"],"names":[],"mappings":"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","sourcesContent":["import Evented from '../core/Evented';\nimport { RouteConfig, History, OutletContext, Params, RouterInterface, Route, RouterOptions } from './interfaces';\nimport { HashHistory } from './history/HashHistory';\nimport { EventObject } from '../core/Evented';\n\nconst PARAM = '__PARAM__';\n\nconst paramRegExp = new RegExp(/^{.+}$/);\n\ninterface RouteWrapper {\n\troute: Route;\n\tsegments: string[];\n\tparent?: RouteWrapper;\n\ttype?: string;\n\tparams: Params;\n}\n\nexport interface NavEvent extends EventObject<string> {\n\toutlet?: string;\n\tcontext?: OutletContext;\n}\n\nexport interface OutletEvent extends EventObject<string> {\n\toutlet: OutletContext;\n\taction: 'enter' | 'exit';\n}\n\nconst ROUTE_SEGMENT_SCORE = 7;\nconst DYNAMIC_SEGMENT_PENALTY = 2;\n\nfunction matchingParams({ params: previousParams }: OutletContext, { params }: OutletContext) {\n\tconst matching = Object.keys(previousParams).every((key) => previousParams[key] === params[key]);\n\tif (!matching) {\n\t\treturn false;\n\t}\n\treturn Object.keys(params).every((key) => previousParams[key] === params[key]);\n}\n\nexport class Router extends Evented<{ nav: NavEvent; outlet: OutletEvent }> implements RouterInterface {\n\tprivate _routes: Route[] = [];\n\tprivate _outletMap: { [index: string]: Route } = Object.create(null);\n\tprivate _matchedOutlets: { [index: string]: OutletContext } = Object.create(null);\n\tprivate _currentParams: Params = {};\n\tprivate _currentQueryParams: Params = {};\n\tprivate _defaultOutlet: string | undefined;\n\tprivate _history!: History;\n\tprivate _options: RouterOptions;\n\n\tconstructor(config: RouteConfig[], options: RouterOptions = {}) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis._register(config);\n\t\tconst autostart = options.autostart === undefined ? true : options.autostart;\n\t\tif (autostart) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the path against the registered history manager\n\t *\n\t * @param path The path to set on the history manager\n\t */\n\tpublic setPath(path: string): void {\n\t\tthis._history.set(path);\n\t}\n\n\tpublic start() {\n\t\tconst { HistoryManager = HashHistory, base, window } = this._options;\n\t\tthis._history = new HistoryManager({ onChange: this._onChange, base, window });\n\t\tif (this._matchedOutlets.errorOutlet && this._defaultOutlet) {\n\t\t\tconst path = this.link(this._defaultOutlet);\n\t\t\tif (path) {\n\t\t\t\tthis.setPath(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Generate a link for a given outlet identifier and optional params.\n\t *\n\t * @param outlet The outlet to generate a link for\n\t * @param params Optional Params for the generated link\n\t */\n\tpublic link(outlet: string, params: Params = {}): string | undefined {\n\t\tconst { _outletMap, _currentParams, _currentQueryParams } = this;\n\t\tlet route = _outletMap[outlet];\n\t\tif (route === undefined) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet linkPath: string | undefined = route.fullPath;\n\t\tif (route.fullQueryParams.length > 0) {\n\t\t\tlet queryString = route.fullQueryParams.reduce((queryParamString, param, index) => {\n\t\t\t\tif (index > 0) {\n\t\t\t\t\treturn `${queryParamString}&${param}={${param}}`;\n\t\t\t\t}\n\t\t\t\treturn `?${param}={${param}}`;\n\t\t\t}, '');\n\t\t\tlinkPath = `${linkPath}${queryString}`;\n\t\t}\n\t\tparams = { ...route.defaultParams, ..._currentQueryParams, ..._currentParams, ...params };\n\n\t\tif (Object.keys(params).length === 0 && route.fullParams.length > 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst fullParams = [...route.fullParams, ...route.fullQueryParams];\n\t\tfor (let i = 0; i < fullParams.length; i++) {\n\t\t\tconst param = fullParams[i];\n\t\t\tif (params[param]) {\n\t\t\t\tlinkPath = linkPath.replace(`{${param}}`, params[param]);\n\t\t\t} else {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}\n\t\treturn this._history.prefix(linkPath);\n\t}\n\n\t/**\n\t * Returns the outlet context for the outlet identifier if one has been matched\n\t *\n\t * @param outletIdentifier The outlet identifer\n\t */\n\tpublic getOutlet(outletIdentifier: string): OutletContext | undefined {\n\t\treturn this._matchedOutlets[outletIdentifier];\n\t}\n\n\t/**\n\t * Returns all the params for the current matched outlets\n\t */\n\tpublic get currentParams() {\n\t\treturn this._currentParams;\n\t}\n\n\t/**\n\t * Strips the leading slash on a path if one exists\n\t *\n\t * @param path The path to strip a leading slash\n\t */\n\tprivate _stripLeadingSlash(path: string): string {\n\t\tif (path[0] === '/') {\n\t\t\treturn path.slice(1);\n\t\t}\n\t\treturn path;\n\t}\n\n\t/**\n\t * Registers the routing configuration\n\t *\n\t * @param config The configuration\n\t * @param routes The routes\n\t * @param parentRoute The parent route\n\t */\n\tprivate _register(config: RouteConfig[], routes?: Route[], parentRoute?: Route): void {\n\t\troutes = routes ? routes : this._routes;\n\t\tfor (let i = 0; i < config.length; i++) {\n\t\t\tlet { path, outlet, children, defaultRoute = false, defaultParams = {} } = config[i];\n\t\t\tlet [parsedPath, queryParamString] = path.split('?');\n\t\t\tlet queryParams: string[] = [];\n\t\t\tparsedPath = this._stripLeadingSlash(parsedPath);\n\n\t\t\tconst segments: string[] = parsedPath.split('/');\n\t\t\tconst route: Route = {\n\t\t\t\tparams: [],\n\t\t\t\toutlet,\n\t\t\t\tpath: parsedPath,\n\t\t\t\tsegments,\n\t\t\t\tdefaultParams: parentRoute ? { ...parentRoute.defaultParams, ...defaultParams } : defaultParams,\n\t\t\t\tchildren: [],\n\t\t\t\tfullPath: parentRoute ? `${parentRoute.fullPath}/${parsedPath}` : parsedPath,\n\t\t\t\tfullParams: [],\n\t\t\t\tfullQueryParams: [],\n\t\t\t\tscore: parentRoute ? parentRoute.score : 0\n\t\t\t};\n\t\t\tif (defaultRoute) {\n\t\t\t\tthis._defaultOutlet = outlet;\n\t\t\t}\n\t\t\tfor (let i = 0; i < segments.length; i++) {\n\t\t\t\tconst segment = segments[i];\n\t\t\t\troute.score += ROUTE_SEGMENT_SCORE;\n\t\t\t\tif (paramRegExp.test(segment)) {\n\t\t\t\t\troute.score -= DYNAMIC_SEGMENT_PENALTY;\n\t\t\t\t\troute.params.push(segment.replace('{', '').replace('}', ''));\n\t\t\t\t\tsegments[i] = PARAM;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (queryParamString) {\n\t\t\t\tqueryParams = queryParamString.split('&').map((queryParam) => {\n\t\t\t\t\treturn queryParam.replace('{', '').replace('}', '');\n\t\t\t\t});\n\t\t\t}\n\t\t\troute.fullQueryParams = parentRoute ? [...parentRoute.fullQueryParams, ...queryParams] : queryParams;\n\n\t\t\troute.fullParams = parentRoute ? [...parentRoute.fullParams, ...route.params] : route.params;\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tthis._register(children, route.children, route);\n\t\t\t}\n\t\t\tthis._outletMap[outlet] = route;\n\t\t\troutes.push(route);\n\t\t}\n\t}\n\n\t/**\n\t * Returns an object of query params\n\t *\n\t * @param queryParamString The string of query params, e.g `paramOne=one&paramTwo=two`\n\t */\n\tprivate _getQueryParams(queryParamString?: string): { [index: string]: string } {\n\t\tconst queryParams: { [index: string]: string } = {};\n\t\tif (queryParamString) {\n\t\t\tconst queryParameters = queryParamString.split('&');\n\t\t\tfor (let i = 0; i < queryParameters.length; i++) {\n\t\t\t\tconst [key, value] = queryParameters[i].split('=');\n\t\t\t\tqueryParams[key] = value;\n\t\t\t}\n\t\t}\n\t\treturn queryParams;\n\t}\n\n\t/**\n\t * Called on change of the route by the the registered history manager. Matches the path against\n\t * the registered outlets.\n\t *\n\t * @param requestedPath The path of the requested route\n\t */\n\tprivate _onChange = (requestedPath: string): void => {\n\t\trequestedPath = this._stripLeadingSlash(requestedPath);\n\t\tconst previousMatchedOutlets = this._matchedOutlets;\n\t\tthis._matchedOutlets = Object.create(null);\n\t\tconst [path, queryParamString] = requestedPath.split('?');\n\t\tthis._currentQueryParams = this._getQueryParams(queryParamString);\n\t\tconst segments = path.split('/');\n\t\tlet routeConfigs: RouteWrapper[] = this._routes.map((route) => ({\n\t\t\troute,\n\t\t\tsegments: [...segments],\n\t\t\tparent: undefined,\n\t\t\tparams: {}\n\t\t}));\n\t\tlet routeConfig: RouteWrapper | undefined;\n\t\tlet matchedRoutes: RouteWrapper[] = [];\n\t\twhile ((routeConfig = routeConfigs.pop())) {\n\t\t\tconst { route, parent, segments, params } = routeConfig;\n\t\t\tlet segmentIndex = 0;\n\t\t\tlet type = 'index';\n\t\t\tlet paramIndex = 0;\n\t\t\tlet routeMatch = true;\n\t\t\tif (segments.length < route.segments.length) {\n\t\t\t\trouteMatch = false;\n\t\t\t} else {\n\t\t\t\twhile (segments.length > 0) {\n\t\t\t\t\tif (route.segments[segmentIndex] === undefined) {\n\t\t\t\t\t\ttype = 'partial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst segment = segments.shift()!;\n\t\t\t\t\tif (route.segments[segmentIndex] === PARAM) {\n\t\t\t\t\t\tparams[route.params[paramIndex++]] = segment;\n\t\t\t\t\t\tthis._currentParams = { ...this._currentParams, ...params };\n\t\t\t\t\t} else if (route.segments[segmentIndex] !== segment) {\n\t\t\t\t\t\trouteMatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsegmentIndex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (routeMatch) {\n\t\t\t\trouteConfig.type = type;\n\t\t\t\tmatchedRoutes.push({ route, parent, type, params, segments: [] });\n\t\t\t\tif (segments.length) {\n\t\t\t\t\trouteConfigs = [\n\t\t\t\t\t\t...routeConfigs,\n\t\t\t\t\t\t...route.children.map((childRoute) => ({\n\t\t\t\t\t\t\troute: childRoute,\n\t\t\t\t\t\t\tsegments: [...segments],\n\t\t\t\t\t\t\tparent: routeConfig,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tparams: { ...params }\n\t\t\t\t\t\t}))\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet matchedOutletName: string | undefined = undefined;\n\t\tlet matchedRoute: any = matchedRoutes.reduce((match: any, matchedRoute: any) => {\n\t\t\tif (!match) {\n\t\t\t\treturn matchedRoute;\n\t\t\t}\n\t\t\tif (match.route.score > matchedRoute.route.score) {\n\t\t\t\treturn match;\n\t\t\t}\n\t\t\treturn matchedRoute;\n\t\t}, undefined);\n\n\t\tif (matchedRoute) {\n\t\t\tif (matchedRoute.type === 'partial') {\n\t\t\t\tmatchedRoute.type = 'error';\n\t\t\t}\n\t\t\tmatchedOutletName = matchedRoute.route.outlet;\n\t\t\twhile (matchedRoute) {\n\t\t\t\tlet { type, params, parent, route } = matchedRoute;\n\t\t\t\tconst matchedOutlet = {\n\t\t\t\t\tid: route.outlet,\n\t\t\t\t\tqueryParams: this._currentQueryParams,\n\t\t\t\t\tparams,\n\t\t\t\t\ttype,\n\t\t\t\t\tisError: () => type === 'error',\n\t\t\t\t\tisExact: () => type === 'index'\n\t\t\t\t};\n\t\t\t\tconst previousMatchedOutlet = previousMatchedOutlets[route.outlet];\n\t\t\t\tthis._matchedOutlets[route.outlet] = matchedOutlet;\n\t\t\t\tif (!previousMatchedOutlet || !matchingParams(previousMatchedOutlet, matchedOutlet)) {\n\t\t\t\t\tthis.emit({ type: 'outlet', outlet: matchedOutlet, action: 'enter' });\n\t\t\t\t}\n\t\t\t\tmatchedRoute = parent;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._matchedOutlets.errorOutlet = {\n\t\t\t\tid: 'errorOutlet',\n\t\t\t\tqueryParams: {},\n\t\t\t\tparams: {},\n\t\t\t\tisError: () => true,\n\t\t\t\tisExact: () => false,\n\t\t\t\ttype: 'error'\n\t\t\t};\n\t\t}\n\n\t\tconst previousMatchedOutletKeys = Object.keys(previousMatchedOutlets);\n\t\tfor (let i = 0; i < previousMatchedOutletKeys.length; i++) {\n\t\t\tconst key = previousMatchedOutletKeys[i];\n\t\t\tconst matchedOutlet = this._matchedOutlets[key];\n\t\t\tif (!matchedOutlet || !matchingParams(previousMatchedOutlets[key], matchedOutlet)) {\n\t\t\t\tthis.emit({ type: 'outlet', outlet: previousMatchedOutlets[key], action: 'exit' });\n\t\t\t}\n\t\t}\n\t\tthis.emit({\n\t\t\ttype: 'nav',\n\t\t\toutlet: matchedOutletName,\n\t\t\tcontext: matchedOutletName ? this._matchedOutlets[matchedOutletName] : undefined\n\t\t});\n\t};\n}\n\nexport default Router;\n"]}