{"version":3,"file":"StateHistory.js","sourceRoot":"","sources":["StateHistory.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,4CAAuC;IAEvC,sCAAiC;IAEjC,IAAM,aAAa,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;IACxC,IAAM,YAAY,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;IAEvC,SAAS,SAAS,CAAC,IAAwB,EAAE,IAAY;QACxD,IAAI,CAAC,IAAI,EAAE;YACV,OAAO,IAAI,CAAC;SACZ;QACD,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC/B;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED,SAAS,YAAY,CAAC,IAAY;QACjC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YACpB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACrB;QACD,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YACpB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACrB;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAED;QAMC,sBAAY,EAA0D;YAAtE,iBAkBC;gBAlBa,sBAAQ,EAAE,cAAsB,EAAtB,qDAAsB,EAAE,cAAI;YA0C5C,cAAS,GAAG;gBACnB,IAAM,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;gBACnE,KAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,KAAI,CAAC,KAAK,EAAE,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAE/E,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YACvC,CAAC,CAAC;YA9CD,IAAI,aAAG,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;gBAC9B,OAAO,CAAC,IAAI,CAAC,qFAAqF,CAAC,CAAC;aACpG;YACD,IAAI,CAAC,KAAK,GAAG,aAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAG,aAAG,CAAC,UAAU,CAAG,CAAC,CAAC,CAAC,GAAG,CAAC;YAC1D,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC9B,MAAM,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;aACxD;YACD,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;YAClC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACpC,IAAI,CAAC,KAAK,GAAM,IAAI,CAAC,KAAK,MAAG,CAAC;aAC9B;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBACnC,IAAI,CAAC,KAAK,GAAG,MAAI,IAAI,CAAC,KAAO,CAAC;aAC9B;YACD,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,EAAE,CAAC;QAClB,CAAC;QAEM,6BAAM,GAAb,UAAc,IAAY;YACzB,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;QAEO,mCAAY,GAApB,UAAqB,IAAY;YAChC,OAAO,KAAG,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC,IAAI,CAAG,CAAC;QAC7C,CAAC;QAEM,0BAAG,GAAV,UAAW,IAAY;YACtB,IAAM,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YAC1C,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;gBAC5B,OAAO;aACP;YAED,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACjE,IAAI,CAAC,SAAS,EAAE,CAAC;QAClB,CAAC;QAED,sBAAW,iCAAO;iBAAlB;gBACC,OAAO,IAAI,CAAC,QAAQ,CAAC;YACtB,CAAC;;;WAAA;QAQF,mBAAC;IAAD,CAAC,AAtDD,IAsDC;IAtDY,oCAAY;IAwDzB,kBAAe,YAAY,CAAC","sourcesContent":["import global from '../../shim/global';\nimport { History as HistoryInterface, HistoryOptions, OnChangeFunction } from './../interfaces';\nimport has from '../../core/has';\n\nconst trailingSlash = new RegExp(/\\/$/);\nconst leadingSlash = new RegExp(/^\\//);\n\nfunction stripBase(base: string | undefined, path: string): string {\n\tif (!base) {\n\t\treturn path;\n\t}\n\tif (path.indexOf(base) === 0) {\n\t\treturn path.slice(base.length);\n\t}\n\treturn path;\n}\n\nfunction sanatizePath(path: string) {\n\tif (path[0] === '#') {\n\t\tpath = path.slice(1);\n\t}\n\tif (path[0] === '/') {\n\t\tpath = path.slice(1);\n\t}\n\treturn path;\n}\n\nexport class StateHistory implements HistoryInterface {\n\tprivate _current!: string;\n\tprivate _onChangeFunction: OnChangeFunction;\n\tprivate _window: Window;\n\tprivate _base: string | undefined;\n\n\tconstructor({ onChange, window = global.window, base }: HistoryOptions) {\n\t\tif (has('dojo-debug') && base) {\n\t\t\tconsole.warn(`Base is no longer supported via history options, please set 'base' in the '.dojorc'`);\n\t\t}\n\t\tthis._base = has('app-base') ? `${has('app-base')}` : '/';\n\t\tif (/(#|\\?)/.test(this._base)) {\n\t\t\tthrow new TypeError(\"base must not contain '#' or '?'\");\n\t\t}\n\t\tthis._onChangeFunction = onChange;\n\t\tthis._window = window;\n\t\tif (!trailingSlash.test(this._base)) {\n\t\t\tthis._base = `${this._base}/`;\n\t\t}\n\t\tif (!leadingSlash.test(this._base)) {\n\t\t\tthis._base = `/${this._base}`;\n\t\t}\n\t\tthis._window.addEventListener('popstate', this._onChange, false);\n\t\tthis._onChange();\n\t}\n\n\tpublic prefix(path: string) {\n\t\treturn sanatizePath(path);\n\t}\n\n\tprivate _setBasePath(path: string) {\n\t\treturn `${this._base}${sanatizePath(path)}`;\n\t}\n\n\tpublic set(path: string) {\n\t\tconst value = stripBase(this._base, path);\n\t\tif (this._current === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._window.history.pushState({}, '', this._setBasePath(value));\n\t\tthis._onChange();\n\t}\n\n\tpublic get current(): string {\n\t\treturn this._current;\n\t}\n\n\tprivate _onChange = () => {\n\t\tconst pathName = this._window.location.pathname.replace(/\\/$/, '');\n\t\tthis._current = stripBase(this._base, pathName + this._window.location.search);\n\n\t\tthis._onChangeFunction(this._current);\n\t};\n}\n\nexport default StateHistory;\n"]}