{"version":3,"file":"StateHistory.mjs","sourceRoot":"","sources":["StateHistory.ts"],"names":[],"mappings":"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","sourcesContent":["import global from '../../shim/global';\nimport { History as HistoryInterface, HistoryOptions, OnChangeFunction } from './../interfaces';\nimport has from '../../core/has';\n\nconst trailingSlash = new RegExp(/\\/$/);\nconst leadingSlash = new RegExp(/^\\//);\n\nfunction stripBase(base: string | undefined, path: string): string {\n\tif (!base) {\n\t\treturn path;\n\t}\n\tif (path.indexOf(base) === 0) {\n\t\treturn path.slice(base.length);\n\t}\n\treturn path;\n}\n\nfunction sanatizePath(path: string) {\n\tif (path[0] === '#') {\n\t\tpath = path.slice(1);\n\t}\n\tif (path[0] === '/') {\n\t\tpath = path.slice(1);\n\t}\n\treturn path;\n}\n\nexport class StateHistory implements HistoryInterface {\n\tprivate _current!: string;\n\tprivate _onChangeFunction: OnChangeFunction;\n\tprivate _window: Window;\n\tprivate _base: string | undefined;\n\n\tconstructor({ onChange, window = global.window, base }: HistoryOptions) {\n\t\tif (has('dojo-debug') && base) {\n\t\t\tconsole.warn(`Base is no longer supported via history options, please set 'base' in the '.dojorc'`);\n\t\t}\n\t\tthis._base = has('app-base') ? `${has('app-base')}` : '/';\n\t\tif (/(#|\\?)/.test(this._base)) {\n\t\t\tthrow new TypeError(\"base must not contain '#' or '?'\");\n\t\t}\n\t\tthis._onChangeFunction = onChange;\n\t\tthis._window = window;\n\t\tif (!trailingSlash.test(this._base)) {\n\t\t\tthis._base = `${this._base}/`;\n\t\t}\n\t\tif (!leadingSlash.test(this._base)) {\n\t\t\tthis._base = `/${this._base}`;\n\t\t}\n\t\tthis._window.addEventListener('popstate', this._onChange, false);\n\t\tthis._onChange();\n\t}\n\n\tpublic prefix(path: string) {\n\t\treturn sanatizePath(path);\n\t}\n\n\tprivate _setBasePath(path: string) {\n\t\treturn `${this._base}${sanatizePath(path)}`;\n\t}\n\n\tpublic set(path: string) {\n\t\tconst value = stripBase(this._base, path);\n\t\tif (this._current === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._window.history.pushState({}, '', this._setBasePath(value));\n\t\tthis._onChange();\n\t}\n\n\tpublic get current(): string {\n\t\treturn this._current;\n\t}\n\n\tprivate _onChange = () => {\n\t\tconst pathName = this._window.location.pathname.replace(/\\/$/, '');\n\t\tthis._current = stripBase(this._base, pathName + this._window.location.search);\n\n\t\tthis._onChangeFunction(this._current);\n\t};\n}\n\nexport default StateHistory;\n"]}