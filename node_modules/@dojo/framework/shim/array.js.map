{"version":3,"file":"array.js","sourceRoot":"","sources":["array.ts"],"names":[],"mappings":"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","sourcesContent":["`!has('es6-iterator')`;\nimport { isArrayLike, isIterable, Iterable } from './iterator';\nimport has from '../core/has';\nimport { wrapNative } from './support/util';\n\nexport interface MapCallback<T, U> {\n\t/**\n\t * A callback function when mapping\n\t *\n\t * @param element The element that is currently being mapped\n\t * @param index The current index of the element\n\t */\n\t(element: T, index: number): U;\n}\n\nexport interface FindCallback<T> {\n\t/**\n\t * A callback function when using find\n\t *\n\t * @param element The element that is currenty being analysed\n\t * @param index The current index of the element that is being analysed\n\t * @param array The source array\n\t */\n\t(element: T, index: number, array: ArrayLike<T>): boolean;\n}\n\n/* ES6 Array static methods */\n\nexport interface From {\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @param mapFunction A map function to call on each element in the array\n\t * @param thisArg The execution context for the map function\n\t * @return The new Array\n\t */\n\t<T, U>(source: ArrayLike<T> | Iterable<T>, mapFunction: MapCallback<T, U>, thisArg?: any): Array<U>;\n\n\t/**\n\t * The Array.from() method creates a new Array instance from an array-like or iterable object.\n\t *\n\t * @param source An array-like or iterable object to convert to an array\n\t * @return The new Array\n\t */\n\t<T>(source: ArrayLike<T> | Iterable<T>): Array<T>;\n}\n\nexport let from: From;\n\n/**\n * Creates a new array from the function parameters.\n *\n * @param arguments Any number of arguments for the array\n * @return An array from the given arguments\n */\nexport let of: <T>(...items: T[]) => Array<T>;\n\n/* ES6 Array instance methods */\n\n/**\n * Copies data internally within an array or array-like object.\n *\n * @param target The target array-like object\n * @param offset The index to start copying values to; if negative, it counts backwards from length\n * @param start The first (inclusive) index to copy; if negative, it counts backwards from length\n * @param end The last (exclusive) index to copy; if negative, it counts backwards from length\n * @return The target\n */\nexport let copyWithin: <T>(target: ArrayLike<T>, offset: number, start: number, end?: number) => ArrayLike<T>;\n\n/**\n * Fills elements of an array-like object with the specified value.\n *\n * @param target The target to fill\n * @param value The value to fill each element of the target with\n * @param start The first index to fill\n * @param end The (exclusive) index at which to stop filling\n * @return The filled target\n */\nexport let fill: <T>(target: ArrayLike<T>, value: T, start?: number, end?: number) => ArrayLike<T>;\n\n/**\n * Finds and returns the first instance matching the callback or undefined if one is not found.\n *\n * @param target An array-like object\n * @param callback A function returning if the current value matches a criteria\n * @param thisArg The execution context for the find function\n * @return The first element matching the callback, or undefined if one does not exist\n */\nexport let find: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => T | undefined;\n\n/**\n * Performs a linear search and returns the first index whose value satisfies the passed callback,\n * or -1 if no values satisfy it.\n *\n * @param target An array-like object\n * @param callback A function returning true if the current value satisfies its criteria\n * @param thisArg The execution context for the find function\n * @return The first index whose value satisfies the passed callback, or -1 if no values satisfy it\n */\nexport let findIndex: <T>(target: ArrayLike<T>, callback: FindCallback<T>, thisArg?: {}) => number;\n\n/* ES7 Array instance methods */\n\n/**\n * Determines whether an array includes a given value\n *\n * @param target the target array-like object\n * @param searchElement the item to search for\n * @param fromIndex the starting index to search from\n * @return `true` if the array includes the element, otherwise `false`\n */\nexport let includes: <T>(target: ArrayLike<T>, searchElement: T, fromIndex?: number) => boolean;\n\n// Util functions for filled implementations\n\nlet toLength: any;\nlet toInteger: any;\nlet normalizeOffset: any;\n\nif (!has('es6-array') || !has('es6-array-fill') || !has('es7-array')) {\n\tconst MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n\t/**\n\t * Ensures a non-negative, non-infinite, safe integer.\n\t *\n\t * @param length The number to validate\n\t * @return A proper length\n\t */\n\ttoLength = function toLength(length: number): number {\n\t\tif (isNaN(length)) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tlength = Number(length);\n\t\tif (isFinite(length)) {\n\t\t\tlength = Math.floor(length);\n\t\t}\n\t\t// Ensure a non-negative, real, safe integer\n\t\treturn Math.min(Math.max(length, 0), MAX_SAFE_INTEGER);\n\t};\n\n\t/**\n\t * From ES6 7.1.4 ToInteger()\n\t *\n\t * @param value A value to convert\n\t * @return An integer\n\t */\n\ttoInteger = function toInteger(value: any): number {\n\t\tvalue = Number(value);\n\t\tif (isNaN(value)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (value === 0 || !isFinite(value)) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn (value > 0 ? 1 : -1) * Math.floor(Math.abs(value));\n\t};\n\n\t/**\n\t * Normalizes an offset against a given length, wrapping it if negative.\n\t *\n\t * @param value The original offset\n\t * @param length The total length to normalize against\n\t * @return If negative, provide a distance from the end (length); otherwise provide a distance from 0\n\t */\n\tnormalizeOffset = function normalizeOffset(value: number, length: number): number {\n\t\treturn value < 0 ? Math.max(length + value, 0) : Math.min(value, length);\n\t};\n}\n\nif (!has('es6-array')) {\n\tArray.from = function from(\n\t\tthis: ArrayConstructor,\n\t\tarrayLike: Iterable<any> | ArrayLike<any>,\n\t\tmapFunction?: MapCallback<any, any>,\n\t\tthisArg?: any\n\t): Array<any> {\n\t\tif (arrayLike == null) {\n\t\t\tthrow new TypeError('from: requires an array-like object');\n\t\t}\n\n\t\tif (mapFunction && thisArg) {\n\t\t\tmapFunction = mapFunction.bind(thisArg);\n\t\t}\n\n\t\t/* tslint:disable-next-line:variable-name */\n\t\tconst Constructor = this;\n\t\tconst length: number = toLength((arrayLike as any).length);\n\n\t\t// Support extension\n\t\tconst array: any[] =\n\t\t\ttypeof Constructor === 'function' ? <any[]>Object(new Constructor(length)) : new Array(length);\n\n\t\tif (!isArrayLike(arrayLike) && !isIterable(arrayLike)) {\n\t\t\treturn array;\n\t\t}\n\n\t\t// if this is an array and the normalized length is 0, just return an empty array. this prevents a problem\n\t\t// with the iteration on IE when using a NaN array length.\n\t\tif (isArrayLike(arrayLike)) {\n\t\t\tif (length === 0) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayLike.length; i++) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(arrayLike[i], i) : arrayLike[i];\n\t\t\t}\n\t\t} else {\n\t\t\tlet i = 0;\n\t\t\tfor (const value of arrayLike) {\n\t\t\t\tarray[i] = mapFunction ? mapFunction(value, i) : value;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\tif ((arrayLike as any).length !== undefined) {\n\t\t\tarray.length = length;\n\t\t}\n\n\t\treturn array;\n\t};\n\n\tArray.of = function of<T>(...items: T[]): Array<T> {\n\t\treturn Array.prototype.slice.call(items);\n\t};\n\n\tArray.prototype.copyWithin = function copyWithin(offset: number, start: number, end?: number) {\n\t\tif (this == null) {\n\t\t\tthrow new TypeError('copyWithin: target must be an array-like object');\n\t\t}\n\n\t\tconst length = toLength(this.length);\n\t\toffset = normalizeOffset(toInteger(offset), length);\n\t\tstart = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\t\tlet count = Math.min(end! - start, length - offset);\n\n\t\tlet direction = 1;\n\t\tif (offset > start && offset < start + count) {\n\t\t\tdirection = -1;\n\t\t\tstart += count - 1;\n\t\t\toffset += count - 1;\n\t\t}\n\n\t\twhile (count > 0) {\n\t\t\tif (start in this) {\n\t\t\t\tthis[offset] = this[start];\n\t\t\t} else {\n\t\t\t\tdelete this[offset];\n\t\t\t}\n\n\t\t\toffset += direction;\n\t\t\tstart += direction;\n\t\t\tcount--;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\ttype Predicate = (this: void, value: any, index: number, obj: any[]) => boolean;\n\n\tArray.prototype.find = function find(callback: Predicate, thisArg?: {}) {\n\t\tconst index = this.findIndex(callback, thisArg);\n\t\treturn index !== -1 ? this[index] : undefined;\n\t};\n\n\tArray.prototype.findIndex = function findIndex(callback: Predicate, thisArg?: {}): number {\n\t\tconst length = toLength(this.length);\n\n\t\tif (!callback) {\n\t\t\tthrow new TypeError('find: second argument must be a function');\n\t\t}\n\n\t\tif (thisArg) {\n\t\t\tcallback = callback.bind(thisArg);\n\t\t}\n\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tif (callback(this[i], i, this)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n}\n\nif (!has('es6-array-fill')) {\n\tArray.prototype.fill = function fill(value: any, start?: number, end?: number) {\n\t\tconst length = toLength(this.length);\n\t\tlet i = normalizeOffset(toInteger(start), length);\n\t\tend = normalizeOffset(end === undefined ? length : toInteger(end), length);\n\n\t\twhile (i < (end || 0)) {\n\t\t\tthis[i++] = value;\n\t\t}\n\n\t\treturn this;\n\t};\n}\n\nif (!has('es7-array')) {\n\tArray.prototype.includes = function includes(searchElement, fromIndex = 0) {\n\t\tlet len = toLength(this.length);\n\n\t\tfor (let i = fromIndex; i < len; ++i) {\n\t\t\tconst currentElement = this[i];\n\t\t\tif (\n\t\t\t\tsearchElement === currentElement ||\n\t\t\t\t(searchElement !== searchElement && currentElement !== currentElement)\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n}\n\nfrom = Array.from;\nof = Array.of;\ncopyWithin = wrapNative(Array.prototype.copyWithin);\nfill = wrapNative(Array.prototype.fill);\nfind = wrapNative(Array.prototype.find);\nfindIndex = wrapNative(Array.prototype.findIndex);\nincludes = wrapNative(Array.prototype.includes);\n\nexport default Array;\n"]}