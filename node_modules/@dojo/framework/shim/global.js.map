{"version":3,"file":"global.js","sourceRoot":"","sources":["global.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,IAAM,YAAY,GAAQ,CAAC;QAC1B,sDAAsD;QACtD,8BAA8B;QAC9B,sDAAsD;QACtD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;YACtF,OAAO,MAAM,CAAC;SACd;QACD,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;YACtC,OAAO,UAAU,CAAC;SAClB;QACD,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;YAChC,OAAO,IAAI,CAAC;SACZ;QACD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YAClC,OAAO,MAAM,CAAC;SACd;QACD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YAClC,OAAO,MAAM,CAAC;SACd;IACF,CAAC,CAAC,EAAE,CAAC;IAEL,kBAAe,YAAY,CAAC","sourcesContent":["const globalObject: any = (function(): any {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof window !== 'undefined' && window.navigator.userAgent.indexOf('jsdom') > -1) {\n\t\treturn window;\n\t}\n\tif (typeof globalThis !== 'undefined') {\n\t\treturn globalThis;\n\t}\n\tif (typeof self !== 'undefined') {\n\t\treturn self;\n\t}\n\tif (typeof window !== 'undefined') {\n\t\treturn window;\n\t}\n\tif (typeof global !== 'undefined') {\n\t\treturn global;\n\t}\n})();\n\nexport default globalObject;\n"]}