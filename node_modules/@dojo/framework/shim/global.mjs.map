{"version":3,"file":"global.mjs","sourceRoot":"","sources":["global.ts"],"names":[],"mappings":"AAAA,MAAM,YAAY,GAAQ,CAAC;IAC1B,sDAAsD;IACtD,8BAA8B;IAC9B,sDAAsD;IACtD,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;QACtF,OAAO,MAAM,CAAC;KACd;IACD,IAAI,OAAO,UAAU,KAAK,WAAW,EAAE;QACtC,OAAO,UAAU,CAAC;KAClB;IACD,IAAI,OAAO,IAAI,KAAK,WAAW,EAAE;QAChC,OAAO,IAAI,CAAC;KACZ;IACD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QAClC,OAAO,MAAM,CAAC;KACd;IACD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;QAClC,OAAO,MAAM,CAAC;KACd;AACF,CAAC,CAAC,EAAE,CAAC;AAEL,eAAe,YAAY,CAAC","sourcesContent":["const globalObject: any = (function(): any {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof window !== 'undefined' && window.navigator.userAgent.indexOf('jsdom') > -1) {\n\t\treturn window;\n\t}\n\tif (typeof globalThis !== 'undefined') {\n\t\treturn globalThis;\n\t}\n\tif (typeof self !== 'undefined') {\n\t\treturn self;\n\t}\n\tif (typeof window !== 'undefined') {\n\t\treturn window;\n\t}\n\tif (typeof global !== 'undefined') {\n\t\treturn global;\n\t}\n})();\n\nexport default globalObject;\n"]}