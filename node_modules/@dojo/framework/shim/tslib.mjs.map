{"version":3,"file":"tslib.mjs","sourceRoot":"","sources":["tslib.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,UAAU,CAAC;AAC9B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B;;GAEG;AACF,KAAa,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,GAAG,UAAS,CAAM;IAC1D,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EACzD,CAAC,GAAG,CAAC,CAAC;IACP,IAAI,CAAC,EAAE;QACN,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;IAED,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;QAC1B,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;QAEnB,OAAO;YACN,IAAI,EAAE;gBACL,IAAI,CAAC,IAAI,CAAC,EAAE;oBACX,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;iBACtB;gBAED,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBAClB,IAAI,CAAC,GAAG,CAAC,EAAE;oBACV,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,EAAE;wBACrC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;qBACf;iBACD;gBAED,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;YACrC,CAAC;SACD,CAAC;KACF;IAED,OAAO;QACN,IAAI,EAAE;YACL,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;gBACvB,CAAC,GAAG,KAAK,CAAC,CAAC;aACX;YACD,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;QACzC,CAAC;KACD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import global from './global';\nimport * as tslib from 'tslib';\n\n/**\n * Provide any overrides and then load the TypeScript helpers.\n */\n(tslib as any).__values = global.__values = function(o: any) {\n\tlet m = typeof Symbol === 'function' && o[Symbol.iterator],\n\t\ti = 0;\n\tif (m) {\n\t\treturn m.call(o);\n\t}\n\n\tif (typeof o === 'string') {\n\t\tconst l = o.length;\n\n\t\treturn {\n\t\t\tnext: function() {\n\t\t\t\tif (i >= l) {\n\t\t\t\t\treturn { done: true };\n\t\t\t\t}\n\n\t\t\t\tlet char = o[i++];\n\t\t\t\tif (i < l) {\n\t\t\t\t\tlet code = char.charCodeAt(0);\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) {\n\t\t\t\t\t\tchar += o[i++];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn { value: char, done: false };\n\t\t\t}\n\t\t};\n\t}\n\n\treturn {\n\t\tnext: function() {\n\t\t\tif (o && i >= o.length) {\n\t\t\t\to = void 0;\n\t\t\t}\n\t\t\treturn { value: o && o[i++], done: !o };\n\t\t}\n\t};\n};\n"]}