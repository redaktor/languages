{"version":3,"file":"Store.mjs","sourceRoot":"","sources":["Store.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAC1C,OAAO,EAAE,KAAK,EAAkB,MAAM,eAAe,CAAC;AACtD,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAC1C,OAAO,GAAG,MAAM,aAAa,CAAC;AA2G9B,SAAS,QAAQ,CAAC,OAAgB;IACjC,OAAO,OAAO,OAAO,KAAK,QAAQ,CAAC;AACpC,CAAC;AASD,MAAM,OAAO,YAAY;IAAzB;QACC;;WAEG;QACK,WAAM,GAAG,EAAO,CAAC;QAEzB;;WAEG;QACI,QAAG,GAAG,CAAU,IAAgB,EAAK,EAAE;YAC7C,OAAO,IAAI,CAAC,KAAK,CAAC;QACnB,CAAC,CAAC;QAEF;;WAEG;QACI,UAAK,GAAG,CAAC,UAA+B,EAAuB,EAAE;YACvE,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;YACpC,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;YACjC,OAAO,WAAW,CAAC,cAAc,CAAC;QACnC,CAAC,CAAC;QAEK,OAAE,GAAG,CAAU,IAAuB,EAAE,KAAa,EAAc,EAAE;YAC3E,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC7B,MAAM,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;YAEpC,OAAO;gBACN,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,KAAK,EAAE;gBAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,KAAK;aACL,CAAC;QACH,CAAC,CAAC;QAEK,SAAI,GAAqB,CAAC,IAA2B,EAAE,GAAG,QAAgC,EAAE,EAAE;YACpG,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;gBAC7B,QAAQ,GAAG,CAAC,IAAI,EAAE,GAAG,QAAQ,CAAC,CAAC;aAC/B;iBAAM;gBACN,QAAQ,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,GAAG,QAAQ,CAAC,CAAC;aAC7D;YAED,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAS,QAAQ,CAAC,CAAC;YACzD,MAAM,mBAAmB,GAAG,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC;YACtD,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;YAE5F,OAAO;gBACN,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;aAC/B,CAAC;QACH,CAAC,CAAC;IACH,CAAC;CAAA;AAED;;GAEG;AACH,MAAM,OAAO,KAAe,SAAQ,OAAO;IAc1C,YAAY,OAAqC;QAChD,KAAK,EAAE,CAAC;QAdD,aAAQ,GAAoB,IAAI,YAAY,EAAK,CAAC;QAElD,iBAAY,GAAG,IAAI,GAAG,EAAyB,CAAC;QAEhD,gBAAW,GAAG,CAAC,CAAC;QAExB;;WAEG;QACI,QAAG,GAAG,CAAU,IAAgB,EAAK,EAAE;YAC7C,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC;QAUF;;WAEG;QACI,UAAK,GAAG,CAAC,UAA+B,EAAE,aAAsB,KAAK,EAAuB,EAAE;YACpG,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAE/C,IAAI,UAAU,EAAE;gBACf,IAAI,CAAC,UAAU,EAAE,CAAC;aAClB;YAED,OAAO,MAAM,CAAC;QACf,CAAC,CAAC;QAEK,OAAE,GAAG,CAAU,IAAuB,EAAE,KAAa,EAAc,EAAE;YAC3E,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACtC,CAAC,CAAC;QAEK,aAAQ,GAAG,CAAU,KAAgC,EAAE,QAAoB,EAAE,EAAE;YACrF,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;gBAC1B,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;aAChB;YACD,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC;YACtB,OAAO;gBACN,MAAM,EAAE,GAAG,EAAE;oBACX,KAAsB,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;wBACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAClD,IAAI,QAAQ,EAAE;4BACb,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE;gCAC3D,OAAO,QAAQ,CAAC,UAAU,KAAK,UAAU,CAAC;4BAC3C,CAAC,CAAC,CAAC;yBACH;oBACF,CAAC,CAAC,CAAC;gBACJ,CAAC;aACD,CAAC;QACH,CAAC,CAAC;QAEM,iBAAY,GAAG,CAAU,IAAgB,EAAE,QAAoB,EAAE,UAAkB,EAAQ,EAAE;YACpG,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,EAAE;gBACjB,WAAW,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;aAC/D;YACD,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;YACrD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;QAC/C,CAAC,CAAC;QA+BK,SAAI,GAAqB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAlFtE,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;YAC9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnD;IACF,CAAC;IAiDO,aAAa;QACpB,MAAM,iBAAiB,GAAa,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,KAAoB,EAAE,IAAY,EAAE,EAAE;YAChE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;YAC3C,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;YAClC,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM;gBACvC,CAAC,CAAE,IAAI,CAAC,QAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAY,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;gBACjG,CAAC,CAAC,SAAS,CAAC;YACb,IAAI,aAAa,KAAK,QAAQ,EAAE;gBAC/B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,aAAa,EAAE,QAAQ,EAAE,CAAC,CAAC;gBACpE,SAAS,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE;oBAClC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,YAAY,CAAC;oBAC9C,IAAI,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;wBACjD,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACnC,QAAQ,EAAE,CAAC;qBACX;gBACF,CAAC,CAAC,CAAC;aACH;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACI,UAAU;QAChB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;IACnC,CAAC;CAGD;AAED,eAAe,KAAK,CAAC","sourcesContent":["import { Evented } from '../core/Evented';\nimport { Patch, PatchOperation } from './state/Patch';\nimport { Pointer } from './state/Pointer';\nimport Map from '../shim/Map';\n\n/**\n * The \"path\" to a value of type T on and object of type M. The path string is a JSON Pointer to the location of\n * `value` within `state`.\n *\n */\nexport interface Path<M, T> {\n\tpath: string;\n\tstate: M;\n\tvalue: T;\n}\n\n/**\n * An interface that enables typed traversal of an arbitrary type M. `path` and `at` can be used to generate\n * `Path`s that allow access to properties within M via the `get` method. The returned `Path`s can also be passed to the\n * utility methods `add`, `replace`, and `delete` in order to generate typed operations for modifying the state of a store.\n */\nexport interface State<M> {\n\tget<S>(path: Path<M, S>): S;\n\tat<S extends Path<M, Array<any>>>(path: S, index: number): Path<M, S['value'][0]>;\n\tpath: StatePaths<M>;\n}\n\nexport interface StatePaths<M> {\n\t<T, P0 extends keyof Required<T>>(path: Path<M, T>, a: P0): Path<M, Required<T>[P0]>;\n\t<T, P0 extends keyof T, P1 extends keyof Required<T>[P0]>(path: Path<M, T>, a: P0, b: P1): Path<\n\t\tM,\n\t\tRequired<Required<T>[P0]>[P1]\n\t>;\n\t<T, P0 extends keyof T, P1 extends keyof Required<T>[P0], P2 extends keyof Required<Required<T>[P0]>[P1]>(\n\t\tpath: Path<M, T>,\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2\n\t): Path<M, Required<Required<Required<T>[P0]>[P1]>[P2]>;\n\t<\n\t\tT,\n\t\tP0 extends keyof T,\n\t\tP1 extends keyof Required<T>[P0],\n\t\tP2 extends keyof Required<Required<T>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<T>[P0]>[P1]>[P2]\n\t>(\n\t\tpath: Path<M, T>,\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3\n\t): Path<M, Required<Required<Required<Required<T>[P0]>[P1]>[P2]>[P3]>;\n\t<\n\t\tT,\n\t\tP0 extends keyof T,\n\t\tP1 extends keyof Required<T>[P0],\n\t\tP2 extends keyof Required<Required<T>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<T>[P0]>[P1]>[P2],\n\t\tP4 extends keyof Required<Required<Required<Required<T>[P0]>[P1]>[P2]>[P3]\n\t>(\n\t\tpath: Path<M, T>,\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3,\n\t\te: P4\n\t): Path<M, Required<Required<Required<Required<Required<T>[P0]>[P1]>[P2]>[P3]>[P4]>;\n\t<P0 extends keyof M>(a: P0): Path<M, Required<M>[P0]>;\n\t<P0 extends keyof M, P1 extends keyof Required<M>[P0]>(a: P0, b: P1): Path<M, Required<Required<M>[P0]>[P1]>;\n\t<P0 extends keyof M, P1 extends keyof Required<M>[P0], P2 extends keyof Required<Required<M>[P0]>[P1]>(\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2\n\t): Path<M, Required<Required<Required<M>[P0]>[P1]>[P2]>;\n\t<\n\t\tP0 extends keyof M,\n\t\tP1 extends keyof Required<M>[P0],\n\t\tP2 extends keyof Required<Required<M>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<M>[P0]>[P1]>[P2]\n\t>(\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3\n\t): Path<M, Required<Required<Required<Required<M>[P0]>[P1]>[P2]>[P3]>;\n\t<\n\t\tP0 extends keyof M,\n\t\tP1 extends keyof Required<M>[P0],\n\t\tP2 extends keyof Required<Required<M>[P0]>[P1],\n\t\tP3 extends keyof Required<Required<Required<M>[P0]>[P1]>[P2],\n\t\tP4 extends keyof Required<Required<Required<Required<M>[P0]>[P1]>[P2]>[P3]\n\t>(\n\t\ta: P0,\n\t\tb: P1,\n\t\tc: P2,\n\t\td: P3,\n\t\te: P4\n\t): Path<M, Required<Required<Required<Required<Required<M>[P0]>[P1]>[P2]>[P3]>[P4]>;\n}\n\ninterface OnChangeCallback {\n\tcallbackId: number;\n\tcallback: () => void;\n}\n\ninterface OnChangeValue {\n\tcallbacks: OnChangeCallback[];\n\tpreviousValue: any;\n}\n\nfunction isString(segment?: string): segment is string {\n\treturn typeof segment === 'string';\n}\n\nexport interface MutableState<T = any> extends State<T> {\n\t/**\n\t * Applies store operations to state and returns the undo operations\n\t */\n\tapply(operations: PatchOperation<T>[]): PatchOperation<T>[];\n}\n\nexport class DefaultState<T = any> implements MutableState<T> {\n\t/**\n\t * The private state object\n\t */\n\tprivate _state = {} as T;\n\n\t/**\n\t * Returns the state at a specific pointer path location.\n\t */\n\tpublic get = <U = any>(path: Path<T, U>): U => {\n\t\treturn path.value;\n\t};\n\n\t/**\n\t * Applies store operations to state and returns the undo operations\n\t */\n\tpublic apply = (operations: PatchOperation<T>[]): PatchOperation<T>[] => {\n\t\tconst patch = new Patch(operations);\n\t\tconst patchResult = patch.apply(this._state);\n\t\tthis._state = patchResult.object;\n\t\treturn patchResult.undoOperations;\n\t};\n\n\tpublic at = <U = any>(path: Path<T, Array<U>>, index: number): Path<T, U> => {\n\t\tconst array = this.get(path);\n\t\tconst value = array && array[index];\n\n\t\treturn {\n\t\t\tpath: `${path.path}/${index}`,\n\t\t\tstate: path.state,\n\t\t\tvalue\n\t\t};\n\t};\n\n\tpublic path: State<T>['path'] = (path: string | Path<T, any>, ...segments: (string | undefined)[]) => {\n\t\tif (typeof path === 'string') {\n\t\t\tsegments = [path, ...segments];\n\t\t} else {\n\t\t\tsegments = [...new Pointer(path.path).segments, ...segments];\n\t\t}\n\n\t\tconst stringSegments = segments.filter<string>(isString);\n\t\tconst hasMultipleSegments = stringSegments.length > 1;\n\t\tconst pointer = new Pointer(hasMultipleSegments ? stringSegments : stringSegments[0] || '');\n\n\t\treturn {\n\t\t\tpath: pointer.path,\n\t\t\tstate: this._state,\n\t\t\tvalue: pointer.get(this._state)\n\t\t};\n\t};\n}\n\n/**\n * Application state store\n */\nexport class Store<T = any> extends Evented implements MutableState<T> {\n\tprivate _adapter: MutableState<T> = new DefaultState<T>();\n\n\tprivate _changePaths = new Map<string, OnChangeValue>();\n\n\tprivate _callbackId = 0;\n\n\t/**\n\t * Returns the state at a specific pointer path location.\n\t */\n\tpublic get = <U = any>(path: Path<T, U>): U => {\n\t\treturn this._adapter.get(path);\n\t};\n\n\tconstructor(options?: { state?: MutableState<T> }) {\n\t\tsuper();\n\t\tif (options && options.state) {\n\t\t\tthis._adapter = options.state;\n\t\t\tthis.path = this._adapter.path.bind(this._adapter);\n\t\t}\n\t}\n\n\t/**\n\t * Applies store operations to state and returns the undo operations\n\t */\n\tpublic apply = (operations: PatchOperation<T>[], invalidate: boolean = false): PatchOperation<T>[] => {\n\t\tconst result = this._adapter.apply(operations);\n\n\t\tif (invalidate) {\n\t\t\tthis.invalidate();\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tpublic at = <U = any>(path: Path<T, Array<U>>, index: number): Path<T, U> => {\n\t\treturn this._adapter.at(path, index);\n\t};\n\n\tpublic onChange = <U = any>(paths: Path<T, U> | Path<T, U>[], callback: () => void) => {\n\t\tconst callbackId = this._callbackId;\n\t\tif (!Array.isArray(paths)) {\n\t\t\tpaths = [paths];\n\t\t}\n\t\tpaths.forEach((path) => this._addOnChange(path, callback, callbackId));\n\t\tthis._callbackId += 1;\n\t\treturn {\n\t\t\tremove: () => {\n\t\t\t\t(paths as Path<T, U>[]).forEach((path) => {\n\t\t\t\t\tconst onChange = this._changePaths.get(path.path);\n\t\t\t\t\tif (onChange) {\n\t\t\t\t\t\tonChange.callbacks = onChange.callbacks.filter((callback) => {\n\t\t\t\t\t\t\treturn callback.callbackId !== callbackId;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t};\n\n\tprivate _addOnChange = <U = any>(path: Path<T, U>, callback: () => void, callbackId: number): void => {\n\t\tlet changePaths = this._changePaths.get(path.path);\n\t\tif (!changePaths) {\n\t\t\tchangePaths = { callbacks: [], previousValue: this.get(path) };\n\t\t}\n\t\tchangePaths.callbacks.push({ callbackId, callback });\n\t\tthis._changePaths.set(path.path, changePaths);\n\t};\n\n\tprivate _runOnChanges() {\n\t\tconst callbackIdsCalled: number[] = [];\n\t\tthis._changePaths.forEach((value: OnChangeValue, path: string) => {\n\t\t\tconst { previousValue, callbacks } = value;\n\t\t\tconst pointer = new Pointer(path);\n\t\t\tconst newValue = pointer.segments.length\n\t\t\t\t? (this._adapter as any).path(pointer.segments[0] as keyof T, ...pointer.segments.slice(1)).value\n\t\t\t\t: undefined;\n\t\t\tif (previousValue !== newValue) {\n\t\t\t\tthis._changePaths.set(path, { callbacks, previousValue: newValue });\n\t\t\t\tcallbacks.forEach((callbackItem) => {\n\t\t\t\t\tconst { callback, callbackId } = callbackItem;\n\t\t\t\t\tif (callbackIdsCalled.indexOf(callbackId) === -1) {\n\t\t\t\t\t\tcallbackIdsCalled.push(callbackId);\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Emits an invalidation event\n\t */\n\tpublic invalidate(): any {\n\t\tthis._runOnChanges();\n\t\tthis.emit({ type: 'invalidate' });\n\t}\n\n\tpublic path: State<T>['path'] = this._adapter.path.bind(this._adapter);\n}\n\nexport default Store;\n"]}