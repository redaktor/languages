{"version":3,"file":"StoreProvider.mjs","sourceRoot":"","sources":["StoreProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import WidgetBase from '../core/WidgetBase';\nimport { DNode } from '../core/interfaces';\nimport { Store, StatePaths, Path } from './Store';\nimport { diffProperty } from '../core/decorators/diffProperty';\nimport { Handle } from '../core/Destroyable';\nimport { shallow } from '../core/diff';\nimport { alwaysRender } from '../core/decorators/alwaysRender';\n\nexport interface GetPaths<S = any> {\n\t(path: StatePaths<S>): Path<S, any>[];\n}\n\nexport interface StoreProviderProperties<S = any> {\n\trenderer: (store: Store<S>) => DNode | DNode[];\n\tstateKey?: string;\n\tpaths?: GetPaths<S>;\n}\n\nfunction mockPath(...paths: string[]): string {\n\treturn paths.join(',');\n}\n\nfunction pathDiff(previousProperty: Function, newProperty: Function) {\n\tconst previousPaths = previousProperty ? previousProperty(mockPath) : [];\n\tconst currentPaths = newProperty ? newProperty(mockPath) : [];\n\tconst result = shallow(previousPaths, currentPaths);\n\treturn {\n\t\tchanged: result.changed,\n\t\tvalue: newProperty\n\t};\n}\n\n@alwaysRender()\nexport class StoreProvider<S = any> extends WidgetBase<StoreProviderProperties<S>, never> {\n\tprivate _handle: Handle | undefined;\n\n\tprivate _getStore(key: string): Store<S> | undefined {\n\t\tconst item = this.registry.getInjector<Store<S>>(key);\n\t\tif (item) {\n\t\t\treturn item.injector();\n\t\t}\n\t}\n\n\tprivate _getProperties() {\n\t\treturn { stateKey: 'state', ...this.properties };\n\t}\n\n\t@diffProperty('stateKey')\n\t@diffProperty('paths', pathDiff)\n\tprotected onChange(previousProperties: any, currentProperties: StoreProviderProperties) {\n\t\tconst { stateKey = 'state', paths } = currentProperties;\n\t\tif (this._handle) {\n\t\t\tthis._handle.destroy();\n\t\t\tthis._handle = undefined;\n\t\t}\n\t\tconst store = this._getStore(stateKey);\n\t\tif (store) {\n\t\t\tif (paths) {\n\t\t\t\tconst handle = store.onChange(paths(store.path), () => this.invalidate());\n\t\t\t\tthis._handle = {\n\t\t\t\t\tdestroy: () => {\n\t\t\t\t\t\thandle.remove();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tthis._handle = store.on('invalidate', () => {\n\t\t\t\t\tthis.invalidate();\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.own(this._handle);\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\tconst { stateKey, renderer } = this._getProperties();\n\t\tconst store = this._getStore(stateKey);\n\t\tif (!this._handle) {\n\t\t\tthis.onChange({}, this._getProperties());\n\t\t}\n\t\tif (store) {\n\t\t\treturn renderer(store);\n\t\t}\n\t}\n}\n\nexport default StoreProvider;\n"]}