{"version":3,"file":"harness.js","sourceRoot":"","sources":["harness.ts"],"names":[],"mappings":"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","sourcesContent":["import assertRender from './support/assertRender';\nimport { decorateNodes, select } from './support/selector';\nimport { WNode, DNode, Constructor, VNode, Callback, RenderResult, MiddlewareResultFactory } from '../core/interfaces';\nimport { WidgetBase } from '../core/WidgetBase';\nimport { isWidgetFunction } from '../core/Registry';\nimport { invalidator, diffProperty, destroy, create, propertiesDiff } from '../core/vdom';\n\nexport interface CustomComparator {\n\tselector: string;\n\tproperty: string;\n\tcomparator: (value: any) => boolean;\n}\n\nexport interface FunctionalSelector {\n\t(node: VNode | WNode): undefined | Function;\n}\n\nexport interface ExpectedRender {\n\t(): DNode | DNode[];\n}\n\nexport interface Expect {\n\t(expectedRenderFunc: ExpectedRender): void;\n\t(expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender): void;\n}\n\nexport interface ExpectPartial {\n\t(selector: string, expectedRenderFunc: ExpectedRender): void;\n\t(selector: string, expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender): void;\n}\n\nexport interface Trigger {\n\t(selector: string, functionSelector: FunctionalSelector, ...args: any[]): any;\n\t(selector: string, functionSelector: string, ...args: any[]): any;\n}\n\nexport interface GetRender {\n\t(index?: number): DNode | DNode[];\n}\n\nexport interface HarnessAPI {\n\texpect: Expect;\n\texpectPartial: ExpectPartial;\n\ttrigger: Trigger;\n\tgetRender: GetRender;\n}\n\nlet middlewareId = 0;\n\ninterface HarnessOptions {\n\tcustomComparator?: CustomComparator[];\n\tmiddleware?: [MiddlewareResultFactory<any, any, any>, MiddlewareResultFactory<any, any, any>][];\n}\n\nconst factory = create();\n\nexport function harness(renderFunc: () => WNode, options?: HarnessOptions): HarnessAPI;\nexport function harness(renderFunc: () => WNode, customComparator?: CustomComparator[]): HarnessAPI;\nexport function harness(renderFunc: () => WNode, options: HarnessOptions | CustomComparator[] = []): HarnessAPI {\n\tlet invalidated = true;\n\tlet wNode = renderFunc();\n\tconst renderStack: (DNode | DNode[])[] = [];\n\tlet widget: WidgetBase | Callback<any, any, RenderResult>;\n\tlet middleware: any = {};\n\tlet properties: any = {};\n\tlet children: any = [];\n\tlet customDiffs: any[] = [];\n\tlet customDiffNames: string[] = [];\n\tlet customComparator: CustomComparator[] = [];\n\tlet mockMiddleware: [MiddlewareResultFactory<any, any, any>, MiddlewareResultFactory<any, any, any>][] = [];\n\tif (Array.isArray(options)) {\n\t\tcustomComparator = options;\n\t} else {\n\t\tif (options.middleware) {\n\t\t\tmockMiddleware = options.middleware;\n\t\t}\n\t\tif (options.customComparator) {\n\t\t\tcustomComparator = options.customComparator;\n\t\t}\n\t}\n\n\tif (isWidgetFunction(wNode.widgetConstructor)) {\n\t\twidget = wNode.widgetConstructor;\n\n\t\tconst resolveMiddleware = (middlewares: any, mocks: any[]) => {\n\t\t\tconst keys = Object.keys(middlewares);\n\t\t\tconst results: any = {};\n\t\t\tconst uniqueId = `${middlewareId++}`;\n\t\t\tconst mockMiddlewareMap = new Map(mocks);\n\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tlet isMock = false;\n\t\t\t\tlet middleware = middlewares[keys[i]]();\n\t\t\t\tif (mockMiddlewareMap.has(middlewares[keys[i]])) {\n\t\t\t\t\tmiddleware = mockMiddlewareMap.get(middlewares[keys[i]]);\n\t\t\t\t\tisMock = true;\n\t\t\t\t}\n\t\t\t\tconst payload: any = {\n\t\t\t\t\tid: uniqueId,\n\t\t\t\t\tproperties: () => {\n\t\t\t\t\t\treturn { ...properties };\n\t\t\t\t\t},\n\t\t\t\t\tchildren: () => {\n\t\t\t\t\t\treturn children;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (middleware.middlewares) {\n\t\t\t\t\tconst resolvedMiddleware = resolveMiddleware(middleware.middlewares, mocks);\n\t\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t\t} else {\n\t\t\t\t\tif (isMock) {\n\t\t\t\t\t\tlet result = middleware();\n\t\t\t\t\t\tconst resolvedMiddleware = resolveMiddleware(result.middlewares, mocks);\n\t\t\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\t\t\tresults[keys[i]] = result.callback(payload);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\t\tmockMiddleware.push([\n\t\t\tinvalidator,\n\t\t\tfactory(() => () => {\n\t\t\t\tinvalidated = true;\n\t\t\t})\n\t\t]);\n\t\tmockMiddleware.push([destroy, factory(() => () => {})]);\n\t\tmockMiddleware.push([\n\t\t\tdiffProperty,\n\t\t\tfactory(() => (propName: string, func: any) => {\n\t\t\t\tif (customDiffNames.indexOf(propName) === -1) {\n\t\t\t\t\tcustomDiffNames.push(propName);\n\t\t\t\t\tcustomDiffs.push(func);\n\t\t\t\t}\n\t\t\t})\n\t\t]);\n\t\tmiddleware = resolveMiddleware((wNode.widgetConstructor as any).middlewares, mockMiddleware);\n\t} else {\n\t\tconst widgetConstructor = wNode.widgetConstructor as Constructor<WidgetBase>;\n\t\tif (typeof widgetConstructor === 'function') {\n\t\t\twidget = new class extends widgetConstructor {\n\t\t\t\tinvalidate() {\n\t\t\t\t\tinvalidated = true;\n\t\t\t\t\tsuper.invalidate();\n\t\t\t\t}\n\t\t\t}();\n\t\t\t_tryRender();\n\t\t} else {\n\t\t\tthrow new Error('Harness does not support registry items');\n\t\t}\n\t}\n\n\tfunction _getRender(count?: number): DNode | DNode[] {\n\t\treturn count ? renderStack[count] : renderStack[renderStack.length - 1];\n\t}\n\n\tfunction _runCompares(nodes: DNode | DNode[], isExpected: boolean = false) {\n\t\tcustomComparator.forEach(({ selector, property, comparator }) => {\n\t\t\tconst items = select(selector, nodes);\n\t\t\titems.forEach((item: any) => {\n\t\t\t\tconst comparatorName = `comparator(selector=${selector}, ${property})`;\n\t\t\t\tif (item && item.properties && item.properties[property] !== undefined) {\n\t\t\t\t\tconst comparatorResult = comparator(item.properties[property])\n\t\t\t\t\t\t? comparatorName\n\t\t\t\t\t\t: `${comparatorName} FAILED`;\n\t\t\t\t\titem.properties[property] = isExpected ? comparatorName : comparatorResult;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction _tryRender() {\n\t\tlet render: RenderResult;\n\t\tconst wNode = renderFunc();\n\t\tif (isWidgetFunction(widget)) {\n\t\t\tcustomDiffs.forEach((diff) => diff(properties, wNode.properties));\n\t\t\tpropertiesDiff(\n\t\t\t\tproperties,\n\t\t\t\twNode.properties,\n\t\t\t\t() => {\n\t\t\t\t\tinvalidated = true;\n\t\t\t\t},\n\t\t\t\t[...customDiffNames]\n\t\t\t);\n\t\t\tif (children.length || wNode.children.length) {\n\t\t\t\tinvalidated = true;\n\t\t\t}\n\t\t\tproperties = { ...wNode.properties };\n\t\t\tchildren = wNode.children;\n\t\t\tif (invalidated) {\n\t\t\t\trender = widget({ id: 'test', middleware, properties: () => properties, children: () => children });\n\t\t\t}\n\t\t} else {\n\t\t\twidget.__setProperties__(wNode.properties);\n\t\t\twidget.__setChildren__(wNode.children);\n\t\t\tif (invalidated) {\n\t\t\t\trender = widget.__render__();\n\t\t\t}\n\t\t}\n\t\tif (invalidated) {\n\t\t\tconst { hasDeferredProperties, nodes } = decorateNodes(render);\n\t\t\t_runCompares(nodes);\n\t\t\trenderStack.push(nodes);\n\t\t\tif (hasDeferredProperties) {\n\t\t\t\tconst { nodes: afterDeferredPropertiesNodes } = decorateNodes(render);\n\t\t\t\t_runCompares(afterDeferredPropertiesNodes);\n\t\t\t\trenderStack.push(afterDeferredPropertiesNodes);\n\t\t\t}\n\t\t\tinvalidated = false;\n\t\t}\n\t}\n\n\tfunction _expect(expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender, selector?: string) {\n\t\tlet renderResult: DNode | DNode[];\n\t\tif (actualRenderFunc === undefined) {\n\t\t\t_tryRender();\n\t\t\trenderResult = _getRender();\n\t\t} else {\n\t\t\trenderResult = actualRenderFunc();\n\t\t}\n\n\t\tconst { nodes: expectedRenderResult } = decorateNodes(expectedRenderFunc());\n\t\t_runCompares(expectedRenderResult, true);\n\t\tif (selector) {\n\t\t\tconst [firstItem] = select(selector, renderResult);\n\t\t\tassertRender(firstItem, expectedRenderResult);\n\t\t} else {\n\t\t\tassertRender(renderResult, expectedRenderResult);\n\t\t}\n\t}\n\n\treturn {\n\t\texpect(expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender) {\n\t\t\treturn _expect(expectedRenderFunc, actualRenderFunc);\n\t\t},\n\t\texpectPartial(selector: string, expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender) {\n\t\t\treturn _expect(expectedRenderFunc, actualRenderFunc, selector);\n\t\t},\n\t\ttrigger(selector: string, functionSelector: string | FunctionalSelector, ...args: any[]): any {\n\t\t\t_tryRender();\n\t\t\tconst [firstItem] = select(selector, _getRender());\n\n\t\t\tif (!firstItem) {\n\t\t\t\tthrow new Error(`Cannot find node with selector ${selector}`);\n\t\t\t}\n\n\t\t\tlet triggerFunction: Function | undefined;\n\t\t\tif (typeof functionSelector === 'string') {\n\t\t\t\ttriggerFunction = (firstItem.properties as any)[functionSelector];\n\t\t\t} else {\n\t\t\t\ttriggerFunction = functionSelector(firstItem);\n\t\t\t}\n\t\t\tif (triggerFunction) {\n\t\t\t\treturn triggerFunction.apply(widget, args);\n\t\t\t}\n\t\t},\n\t\tgetRender(index?: number): DNode | DNode[] {\n\t\t\treturn _getRender(index);\n\t\t}\n\t};\n}\n\nexport default harness;\n"]}