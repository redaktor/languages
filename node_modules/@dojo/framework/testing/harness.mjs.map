{"version":3,"file":"harness.mjs","sourceRoot":"","sources":["harness.ts"],"names":[],"mappings":"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","sourcesContent":["import assertRender from './support/assertRender';\nimport { decorateNodes, select } from './support/selector';\nimport { WNode, DNode, Constructor, VNode, Callback, RenderResult, MiddlewareResultFactory } from '../core/interfaces';\nimport { WidgetBase } from '../core/WidgetBase';\nimport { isWidgetFunction } from '../core/Registry';\nimport { invalidator, diffProperty, destroy, create, propertiesDiff } from '../core/vdom';\n\nexport interface CustomComparator {\n\tselector: string;\n\tproperty: string;\n\tcomparator: (value: any) => boolean;\n}\n\nexport interface FunctionalSelector {\n\t(node: VNode | WNode): undefined | Function;\n}\n\nexport interface ExpectedRender {\n\t(): DNode | DNode[];\n}\n\nexport interface Expect {\n\t(expectedRenderFunc: ExpectedRender): void;\n\t(expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender): void;\n}\n\nexport interface ExpectPartial {\n\t(selector: string, expectedRenderFunc: ExpectedRender): void;\n\t(selector: string, expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender): void;\n}\n\nexport interface Trigger {\n\t(selector: string, functionSelector: FunctionalSelector, ...args: any[]): any;\n\t(selector: string, functionSelector: string, ...args: any[]): any;\n}\n\nexport interface GetRender {\n\t(index?: number): DNode | DNode[];\n}\n\nexport interface HarnessAPI {\n\texpect: Expect;\n\texpectPartial: ExpectPartial;\n\ttrigger: Trigger;\n\tgetRender: GetRender;\n}\n\nlet middlewareId = 0;\n\ninterface HarnessOptions {\n\tcustomComparator?: CustomComparator[];\n\tmiddleware?: [MiddlewareResultFactory<any, any, any>, MiddlewareResultFactory<any, any, any>][];\n}\n\nconst factory = create();\n\nexport function harness(renderFunc: () => WNode, options?: HarnessOptions): HarnessAPI;\nexport function harness(renderFunc: () => WNode, customComparator?: CustomComparator[]): HarnessAPI;\nexport function harness(renderFunc: () => WNode, options: HarnessOptions | CustomComparator[] = []): HarnessAPI {\n\tlet invalidated = true;\n\tlet wNode = renderFunc();\n\tconst renderStack: (DNode | DNode[])[] = [];\n\tlet widget: WidgetBase | Callback<any, any, RenderResult>;\n\tlet middleware: any = {};\n\tlet properties: any = {};\n\tlet children: any = [];\n\tlet customDiffs: any[] = [];\n\tlet customDiffNames: string[] = [];\n\tlet customComparator: CustomComparator[] = [];\n\tlet mockMiddleware: [MiddlewareResultFactory<any, any, any>, MiddlewareResultFactory<any, any, any>][] = [];\n\tif (Array.isArray(options)) {\n\t\tcustomComparator = options;\n\t} else {\n\t\tif (options.middleware) {\n\t\t\tmockMiddleware = options.middleware;\n\t\t}\n\t\tif (options.customComparator) {\n\t\t\tcustomComparator = options.customComparator;\n\t\t}\n\t}\n\n\tif (isWidgetFunction(wNode.widgetConstructor)) {\n\t\twidget = wNode.widgetConstructor;\n\n\t\tconst resolveMiddleware = (middlewares: any, mocks: any[]) => {\n\t\t\tconst keys = Object.keys(middlewares);\n\t\t\tconst results: any = {};\n\t\t\tconst uniqueId = `${middlewareId++}`;\n\t\t\tconst mockMiddlewareMap = new Map(mocks);\n\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tlet isMock = false;\n\t\t\t\tlet middleware = middlewares[keys[i]]();\n\t\t\t\tif (mockMiddlewareMap.has(middlewares[keys[i]])) {\n\t\t\t\t\tmiddleware = mockMiddlewareMap.get(middlewares[keys[i]]);\n\t\t\t\t\tisMock = true;\n\t\t\t\t}\n\t\t\t\tconst payload: any = {\n\t\t\t\t\tid: uniqueId,\n\t\t\t\t\tproperties: () => {\n\t\t\t\t\t\treturn { ...properties };\n\t\t\t\t\t},\n\t\t\t\t\tchildren: () => {\n\t\t\t\t\t\treturn children;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (middleware.middlewares) {\n\t\t\t\t\tconst resolvedMiddleware = resolveMiddleware(middleware.middlewares, mocks);\n\t\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t\t} else {\n\t\t\t\t\tif (isMock) {\n\t\t\t\t\t\tlet result = middleware();\n\t\t\t\t\t\tconst resolvedMiddleware = resolveMiddleware(result.middlewares, mocks);\n\t\t\t\t\t\tpayload.middleware = resolvedMiddleware;\n\t\t\t\t\t\tresults[keys[i]] = result.callback(payload);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresults[keys[i]] = middleware.callback(payload);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\t\tmockMiddleware.push([\n\t\t\tinvalidator,\n\t\t\tfactory(() => () => {\n\t\t\t\tinvalidated = true;\n\t\t\t})\n\t\t]);\n\t\tmockMiddleware.push([destroy, factory(() => () => {})]);\n\t\tmockMiddleware.push([\n\t\t\tdiffProperty,\n\t\t\tfactory(() => (propName: string, func: any) => {\n\t\t\t\tif (customDiffNames.indexOf(propName) === -1) {\n\t\t\t\t\tcustomDiffNames.push(propName);\n\t\t\t\t\tcustomDiffs.push(func);\n\t\t\t\t}\n\t\t\t})\n\t\t]);\n\t\tmiddleware = resolveMiddleware((wNode.widgetConstructor as any).middlewares, mockMiddleware);\n\t} else {\n\t\tconst widgetConstructor = wNode.widgetConstructor as Constructor<WidgetBase>;\n\t\tif (typeof widgetConstructor === 'function') {\n\t\t\twidget = new class extends widgetConstructor {\n\t\t\t\tinvalidate() {\n\t\t\t\t\tinvalidated = true;\n\t\t\t\t\tsuper.invalidate();\n\t\t\t\t}\n\t\t\t}();\n\t\t\t_tryRender();\n\t\t} else {\n\t\t\tthrow new Error('Harness does not support registry items');\n\t\t}\n\t}\n\n\tfunction _getRender(count?: number): DNode | DNode[] {\n\t\treturn count ? renderStack[count] : renderStack[renderStack.length - 1];\n\t}\n\n\tfunction _runCompares(nodes: DNode | DNode[], isExpected: boolean = false) {\n\t\tcustomComparator.forEach(({ selector, property, comparator }) => {\n\t\t\tconst items = select(selector, nodes);\n\t\t\titems.forEach((item: any) => {\n\t\t\t\tconst comparatorName = `comparator(selector=${selector}, ${property})`;\n\t\t\t\tif (item && item.properties && item.properties[property] !== undefined) {\n\t\t\t\t\tconst comparatorResult = comparator(item.properties[property])\n\t\t\t\t\t\t? comparatorName\n\t\t\t\t\t\t: `${comparatorName} FAILED`;\n\t\t\t\t\titem.properties[property] = isExpected ? comparatorName : comparatorResult;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction _tryRender() {\n\t\tlet render: RenderResult;\n\t\tconst wNode = renderFunc();\n\t\tif (isWidgetFunction(widget)) {\n\t\t\tcustomDiffs.forEach((diff) => diff(properties, wNode.properties));\n\t\t\tpropertiesDiff(\n\t\t\t\tproperties,\n\t\t\t\twNode.properties,\n\t\t\t\t() => {\n\t\t\t\t\tinvalidated = true;\n\t\t\t\t},\n\t\t\t\t[...customDiffNames]\n\t\t\t);\n\t\t\tif (children.length || wNode.children.length) {\n\t\t\t\tinvalidated = true;\n\t\t\t}\n\t\t\tproperties = { ...wNode.properties };\n\t\t\tchildren = wNode.children;\n\t\t\tif (invalidated) {\n\t\t\t\trender = widget({ id: 'test', middleware, properties: () => properties, children: () => children });\n\t\t\t}\n\t\t} else {\n\t\t\twidget.__setProperties__(wNode.properties);\n\t\t\twidget.__setChildren__(wNode.children);\n\t\t\tif (invalidated) {\n\t\t\t\trender = widget.__render__();\n\t\t\t}\n\t\t}\n\t\tif (invalidated) {\n\t\t\tconst { hasDeferredProperties, nodes } = decorateNodes(render);\n\t\t\t_runCompares(nodes);\n\t\t\trenderStack.push(nodes);\n\t\t\tif (hasDeferredProperties) {\n\t\t\t\tconst { nodes: afterDeferredPropertiesNodes } = decorateNodes(render);\n\t\t\t\t_runCompares(afterDeferredPropertiesNodes);\n\t\t\t\trenderStack.push(afterDeferredPropertiesNodes);\n\t\t\t}\n\t\t\tinvalidated = false;\n\t\t}\n\t}\n\n\tfunction _expect(expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender, selector?: string) {\n\t\tlet renderResult: DNode | DNode[];\n\t\tif (actualRenderFunc === undefined) {\n\t\t\t_tryRender();\n\t\t\trenderResult = _getRender();\n\t\t} else {\n\t\t\trenderResult = actualRenderFunc();\n\t\t}\n\n\t\tconst { nodes: expectedRenderResult } = decorateNodes(expectedRenderFunc());\n\t\t_runCompares(expectedRenderResult, true);\n\t\tif (selector) {\n\t\t\tconst [firstItem] = select(selector, renderResult);\n\t\t\tassertRender(firstItem, expectedRenderResult);\n\t\t} else {\n\t\t\tassertRender(renderResult, expectedRenderResult);\n\t\t}\n\t}\n\n\treturn {\n\t\texpect(expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender) {\n\t\t\treturn _expect(expectedRenderFunc, actualRenderFunc);\n\t\t},\n\t\texpectPartial(selector: string, expectedRenderFunc: ExpectedRender, actualRenderFunc?: ExpectedRender) {\n\t\t\treturn _expect(expectedRenderFunc, actualRenderFunc, selector);\n\t\t},\n\t\ttrigger(selector: string, functionSelector: string | FunctionalSelector, ...args: any[]): any {\n\t\t\t_tryRender();\n\t\t\tconst [firstItem] = select(selector, _getRender());\n\n\t\t\tif (!firstItem) {\n\t\t\t\tthrow new Error(`Cannot find node with selector ${selector}`);\n\t\t\t}\n\n\t\t\tlet triggerFunction: Function | undefined;\n\t\t\tif (typeof functionSelector === 'string') {\n\t\t\t\ttriggerFunction = (firstItem.properties as any)[functionSelector];\n\t\t\t} else {\n\t\t\t\ttriggerFunction = functionSelector(firstItem);\n\t\t\t}\n\t\t\tif (triggerFunction) {\n\t\t\t\treturn triggerFunction.apply(widget, args);\n\t\t\t}\n\t\t},\n\t\tgetRender(index?: number): DNode | DNode[] {\n\t\t\treturn _getRender(index);\n\t\t}\n\t};\n}\n\nexport default harness;\n"]}