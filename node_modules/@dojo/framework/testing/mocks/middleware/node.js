(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../../../core/vdom"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var vdom_1 = require("../../../core/vdom");
    function createNodeMock() {
        var nodes = {};
        var invalidate;
        var factory = vdom_1.create({ invalidator: vdom_1.invalidator });
        var mockNodeFactory = factory(function (_a) {
            var middleware = _a.middleware;
            invalidate = middleware.invalidator;
            return {
                get: function (key) {
                    return nodes[key] || null;
                }
            };
        });
        function mockNode(key, element) {
            if (key) {
                if (!nodes[key]) {
                    nodes[key] = element;
                    invalidate && invalidate();
                }
            }
            else {
                return mockNodeFactory();
            }
        }
        return mockNode;
    }
    exports.createNodeMock = createNodeMock;
    exports.default = createNodeMock;
});
//# sourceMappingURL=node.js.map