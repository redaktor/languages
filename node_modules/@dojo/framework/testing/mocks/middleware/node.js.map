{"version":3,"file":"node.js","sourceRoot":"","sources":["node.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,2CAAyD;IAGzD,SAAgB,cAAc;QAC7B,IAAM,KAAK,GAAQ,EAAE,CAAC;QACtB,IAAI,UAAkC,CAAC;QAEvC,IAAM,OAAO,GAAG,aAAM,CAAC,EAAE,WAAW,oBAAA,EAAE,CAAC,CAAC;QAExC,IAAM,eAAe,GAAG,OAAO,CAAC,UAAC,EAAc;gBAAZ,0BAAU;YAC5C,UAAU,GAAG,UAAU,CAAC,WAAW,CAAC;YACpC,OAAO;gBACN,GAAG,EAAH,UAAI,GAAW;oBACd,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;gBAC3B,CAAC;aACD,CAAC;QACH,CAAC,CAAC,CAAC;QAIH,SAAS,QAAQ,CAAC,GAAY,EAAE,OAAa;YAC5C,IAAI,GAAG,EAAE;gBACR,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBAChB,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;oBACrB,UAAU,IAAI,UAAU,EAAE,CAAC;iBAC3B;aACD;iBAAM;gBACN,OAAO,eAAe,EAAE,CAAC;aACzB;QACF,CAAC;QAED,OAAO,QAAQ,CAAC;IACjB,CAAC;IA7BD,wCA6BC;IAED,kBAAe,cAAc,CAAC","sourcesContent":["import { create, invalidator } from '../../../core/vdom';\nimport { MiddlewareResult } from '../../../core/interfaces';\n\nexport function createNodeMock() {\n\tconst nodes: any = {};\n\tlet invalidate: () => void | undefined;\n\n\tconst factory = create({ invalidator });\n\n\tconst mockNodeFactory = factory(({ middleware }) => {\n\t\tinvalidate = middleware.invalidator;\n\t\treturn {\n\t\t\tget(key: string) {\n\t\t\t\treturn nodes[key] || null;\n\t\t\t}\n\t\t};\n\t});\n\n\tfunction mockNode(): MiddlewareResult<any, any, any>;\n\tfunction mockNode(key: string, element: any): void;\n\tfunction mockNode(key?: string, element?: any): void | MiddlewareResult<any, any, any> {\n\t\tif (key) {\n\t\t\tif (!nodes[key]) {\n\t\t\t\tnodes[key] = element;\n\t\t\t\tinvalidate && invalidate();\n\t\t\t}\n\t\t} else {\n\t\t\treturn mockNodeFactory();\n\t\t}\n\t}\n\n\treturn mockNode;\n}\n\nexport default createNodeMock;\n"]}