{"version":3,"file":"node.mjs","sourceRoot":"","sources":["node.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAGzD,MAAM,UAAU,cAAc;IAC7B,MAAM,KAAK,GAAQ,EAAE,CAAC;IACtB,IAAI,UAAkC,CAAC;IAEvC,MAAM,OAAO,GAAG,MAAM,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC;IAExC,MAAM,eAAe,GAAG,OAAO,CAAC,CAAC,EAAE,UAAU,EAAE,EAAE,EAAE;QAClD,UAAU,GAAG,UAAU,CAAC,WAAW,CAAC;QACpC,OAAO;YACN,GAAG,CAAC,GAAW;gBACd,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;YAC3B,CAAC;SACD,CAAC;IACH,CAAC,CAAC,CAAC;IAIH,SAAS,QAAQ,CAAC,GAAY,EAAE,OAAa;QAC5C,IAAI,GAAG,EAAE;YACR,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBAChB,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;gBACrB,UAAU,IAAI,UAAU,EAAE,CAAC;aAC3B;SACD;aAAM;YACN,OAAO,eAAe,EAAE,CAAC;SACzB;IACF,CAAC;IAED,OAAO,QAAQ,CAAC;AACjB,CAAC;AAED,eAAe,cAAc,CAAC","sourcesContent":["import { create, invalidator } from '../../../core/vdom';\nimport { MiddlewareResult } from '../../../core/interfaces';\n\nexport function createNodeMock() {\n\tconst nodes: any = {};\n\tlet invalidate: () => void | undefined;\n\n\tconst factory = create({ invalidator });\n\n\tconst mockNodeFactory = factory(({ middleware }) => {\n\t\tinvalidate = middleware.invalidator;\n\t\treturn {\n\t\t\tget(key: string) {\n\t\t\t\treturn nodes[key] || null;\n\t\t\t}\n\t\t};\n\t});\n\n\tfunction mockNode(): MiddlewareResult<any, any, any>;\n\tfunction mockNode(key: string, element: any): void;\n\tfunction mockNode(key?: string, element?: any): void | MiddlewareResult<any, any, any> {\n\t\tif (key) {\n\t\t\tif (!nodes[key]) {\n\t\t\t\tnodes[key] = element;\n\t\t\t\tinvalidate && invalidate();\n\t\t\t}\n\t\t} else {\n\t\t\treturn mockNodeFactory();\n\t\t}\n\t}\n\n\treturn mockNode;\n}\n\nexport default createNodeMock;\n"]}