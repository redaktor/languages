{"version":3,"file":"selector.mjs","sourceRoot":"","sources":["selector.ts"],"names":[],"mappings":"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","sourcesContent":["import { DNode, DefaultWidgetBaseInterface, WNode, VNode } from '../../core/interfaces';\nimport * as cssSelect from 'css-select-umd';\nimport { isVNode, isWNode } from '../../core/vdom';\nimport { decorate } from '../../core/util';\n\nexport type TestFunction = (elem: DNode<DefaultWidgetBaseInterface>) => boolean;\n\nexport interface DecoratorResult<T> {\n\thasDeferredProperties: boolean;\n\tnodes: T;\n}\n\nexport function decorateNodes(dNode: DNode[]): DecoratorResult<DNode[]>;\nexport function decorateNodes(dNode: DNode): DecoratorResult<DNode>;\nexport function decorateNodes(dNode: DNode | DNode[]): DecoratorResult<DNode | DNode[]>;\nexport function decorateNodes(dNode: any): DecoratorResult<DNode | DNode[]> {\n\tlet hasDeferredProperties = false;\n\tfunction addParent(parent: WNode | VNode): void {\n\t\t(parent.children || []).forEach((child) => {\n\t\t\tif (isVNode(child) || isWNode(child)) {\n\t\t\t\t(child as any).parent = parent;\n\t\t\t}\n\t\t});\n\t\tif (isVNode(parent) && typeof parent.deferredPropertiesCallback === 'function') {\n\t\t\thasDeferredProperties = true;\n\t\t\tparent.properties = { ...parent.properties, ...parent.deferredPropertiesCallback(false) };\n\t\t}\n\t}\n\tconst nodes = decorate(dNode, addParent, (node: DNode): node is WNode | VNode => isWNode(node) || isVNode(node));\n\treturn { hasDeferredProperties, nodes };\n}\n\nexport const parseSelector = (selector: string) => {\n\tconst selectors = selector.split(' ');\n\treturn selectors\n\t\t.map((selector) => {\n\t\t\tconst keySigilIndex = selector.indexOf('@');\n\t\t\tif (keySigilIndex === 0) {\n\t\t\t\treturn `[key=\"${selector.substr(1)}\"]`;\n\t\t\t} else if (keySigilIndex > 0) {\n\t\t\t\tconst key = selector.substring(keySigilIndex + 1);\n\t\t\t\treturn `${selector.slice(0, keySigilIndex)}[key=\"${key}\"]`;\n\t\t\t}\n\t\t\treturn selector;\n\t\t})\n\t\t.join(' ');\n};\n\nexport const adapter: any = {\n\tisTag(elem: DNode) {\n\t\treturn isVNode(elem);\n\t},\n\tgetText(elem: DNode[]) {\n\t\treturn '';\n\t},\n\tremoveSubsets(elements: DNode[]) {\n\t\treturn elements;\n\t},\n\tgetChildren(elem: DNode) {\n\t\treturn isVNode(elem) || isWNode(elem) ? elem.children : [];\n\t},\n\tgetAttributeValue(elem: DNode, name: string) {\n\t\tif (isVNode(elem) || isWNode(elem)) {\n\t\t\tif (name === 'class') {\n\t\t\t\tconst classes = (elem.properties as any).classes;\n\t\t\t\tif (Array.isArray(classes)) {\n\t\t\t\t\treturn classes.join(' ');\n\t\t\t\t}\n\t\t\t\treturn classes;\n\t\t\t}\n\t\t\treturn (elem.properties as any)[name];\n\t\t}\n\t},\n\thasAttrib(elem: DNode, name: string) {\n\t\tif (isVNode(elem) || isWNode(elem)) {\n\t\t\treturn name in elem.properties;\n\t\t}\n\t\treturn false;\n\t},\n\texistsOne(test: TestFunction, elements: DNode[]) {\n\t\treturn elements.some((elem: DNode) => test(elem));\n\t},\n\tgetName(elem: DNode) {\n\t\tif (isVNode(elem)) {\n\t\t\treturn elem.tag;\n\t\t}\n\t},\n\tgetParent(elem: DNode) {\n\t\tif (isVNode(elem) || isWNode(elem)) {\n\t\t\treturn (elem as any).parent;\n\t\t}\n\t},\n\tgetSiblings(elem: DNode) {\n\t\tif (isVNode(elem) || isWNode(elem)) {\n\t\t\tif ((elem as any).parent) {\n\t\t\t\treturn (elem as any).parent.children;\n\t\t\t}\n\t\t\treturn [elem];\n\t\t}\n\t},\n\tfindOne(test: TestFunction, arr: DNode[]): DNode {\n\t\tlet elem = null;\n\t\tfor (let i = 0, l = arr.length; i < l && !elem; i++) {\n\t\t\tif (test(arr[i])) {\n\t\t\t\telem = arr[i];\n\t\t\t} else {\n\t\t\t\tconst children = adapter.getChildren(arr[i]);\n\t\t\t\tif (children && children.length > 0) {\n\t\t\t\t\telem = adapter.findOne(test, children);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn elem;\n\t},\n\tfindAll(test: TestFunction, elements: DNode[]): DNode[] {\n\t\tlet result: DNode[] = [];\n\t\tfor (let i = 0, j = elements.length; i < j; i++) {\n\t\t\tif (test(elements[i])) {\n\t\t\t\tresult.push(elements[i]);\n\t\t\t}\n\t\t\tconst children = adapter.getChildren(elements[i]);\n\t\t\tif (children) {\n\t\t\t\tresult = [...result, ...adapter.findAll(test, children)];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n};\n\nexport function select(selector: string, nodes: DNode | DNode[]): (WNode | VNode)[] {\n\tnodes = decorateNodes(nodes).nodes;\n\tnodes = Array.isArray(nodes) ? nodes : [nodes];\n\tselector = parseSelector(selector);\n\treturn cssSelect(selector, nodes, { adapter }) as (WNode | VNode)[];\n}\n\nexport default select;\n"]}